name: Go

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

jobs:
  
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [linux, win32, darwin]
        arch: [i386, amd64, arm64]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache Go modules
      uses: actions/cache@preview
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: try building
      run: go build -v -o /tmp/delete_me123456 ./...

    # - name: Test
    #  run: go test -v ./...

    - name: Setup final build env
      run: |
        export tagName=${GITHUB_REF/refs\/tags\//}
        echo "Tag: ${tagName}"
        echo "RELEASE_VERSION=${tagName}" >> $GITHUB_ENV
        echo "GOARCH=${{ matrix.os }}" >> $GITHUB_ENV
        echo "GOOS=${{ matrix.arch }}" >> $GITHUB_ENV

    - name: Build Windows
      if: matrix.os == 'win32'
      run: |
        export RELEASE_FILE=DaedalusLanguageServer.$GOARCH.exe
        echo "$RELEASE_FILE" >> $GITHUB_ENV
        go build -v -o $RELEASE_FILE -ldflags '-s -w"

    - name: Build Unix
      if: matrix.os != 'win32'
      run: |
        export RELEASE_FILE=DaedalusLanguageServer.$GOOS.$GOARCH
        echo "$RELEASE_FILE" >> $GITHUB_ENV
        go build -v -o $RELEASE_FILE -ldflags '-extldflags "-static" -s -w"

    - name: Calculate distribution hash
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        sha256sum "$RELEASE_FILE" > "$RELEASE_FILE.sha256"
        cat "$RELEASE_FILE.sha256"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{matrix.arch}}
        path: |
          ${{ env.RELEASE_FILE }}
          ${{ env.RELEASE_FILE }}.sha256
