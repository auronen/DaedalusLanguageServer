// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var daedaluslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func daedaluslexerLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "','", "'...'", "'<<'", "'>>'", "'<='", "'>='", "'=='", "'!='",
		"'%'", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "'('", "')'", "'['", "']'", "'{'",
		"'}'", "'&'", "'&&'", "'|'", "'||'", "'+'", "'-'", "'/'", "'*'", "'~'",
		"'!'", "'='", "'<'", "'>'", "'+='", "'-='", "'*='", "'/='", "'&='",
		"'|='", "'.'", "';'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "IntegerLiteral", "FloatLiteral",
		"StringLiteral", "Var", "Const", "Class", "Prototype", "Instance", "If",
		"Else", "Null", "Return", "Namespace", "Func", "Int", "Float", "StringKeyword",
		"Void", "Event", "Meta", "Test", "Mif", "Melif", "Melse", "Mendif",
		"LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace",
		"RightBrace", "BitAnd", "And", "BitOr", "Or", "Plus", "Minus", "Div",
		"Star", "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", "MinusAssign",
		"StarAssign", "DivAssign", "AndAssign", "OrAssign", "Dot", "Semi", "Identifier",
		"Whitespace", "Newline", "BlockComment", "LineComment",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"IntegerLiteral", "FloatLiteral", "StringLiteral", "Var", "Const", "Class",
		"Prototype", "Instance", "If", "Else", "Null", "Return", "Namespace",
		"Func", "Int", "Float", "StringKeyword", "Void", "Event", "Meta", "Test",
		"Mif", "Melif", "Melse", "Mendif", "LeftParen", "RightParen", "LeftBracket",
		"RightBracket", "LeftBrace", "RightBrace", "BitAnd", "And", "BitOr",
		"Or", "Plus", "Minus", "Div", "Star", "Tilde", "Not", "Assign", "Less",
		"Greater", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", "AndAssign",
		"OrAssign", "Dot", "Semi", "Identifier", "Whitespace", "Newline", "BlockComment",
		"LineComment", "NonDigit", "IdContinue", "IdSpecial", "GermanCharacter",
		"Digit", "PointFloat", "ExponentFloat", "Exponent", "A", "B", "C", "D",
		"E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R",
		"S", "T", "U", "V", "W", "X", "Y", "Z", "M_",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 66, 600, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99,
		7, 99, 2, 100, 7, 100, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 4, 9, 231, 8, 9, 11, 9, 12, 9,
		232, 1, 10, 1, 10, 3, 10, 237, 8, 10, 1, 11, 1, 11, 5, 11, 241, 8, 11,
		10, 11, 12, 11, 244, 9, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24,
		1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28,
		1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1,
		33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1,
		53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56,
		1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1,
		61, 1, 61, 3, 61, 443, 8, 61, 1, 61, 5, 61, 446, 8, 61, 10, 61, 12, 61,
		449, 9, 61, 1, 62, 4, 62, 452, 8, 62, 11, 62, 12, 62, 453, 1, 62, 1, 62,
		1, 63, 1, 63, 3, 63, 460, 8, 63, 1, 63, 3, 63, 463, 8, 63, 1, 63, 1, 63,
		1, 64, 1, 64, 1, 64, 1, 64, 5, 64, 471, 8, 64, 10, 64, 12, 64, 474, 9,
		64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 65, 5, 65,
		485, 8, 65, 10, 65, 12, 65, 488, 9, 65, 1, 65, 1, 65, 1, 66, 1, 66, 3,
		66, 494, 8, 66, 1, 67, 1, 67, 1, 67, 3, 67, 499, 8, 67, 1, 68, 1, 68, 1,
		69, 1, 69, 1, 70, 1, 70, 1, 71, 5, 71, 508, 8, 71, 10, 71, 12, 71, 511,
		9, 71, 1, 71, 1, 71, 4, 71, 515, 8, 71, 11, 71, 12, 71, 516, 1, 71, 4,
		71, 520, 8, 71, 11, 71, 12, 71, 521, 1, 71, 1, 71, 3, 71, 526, 8, 71, 1,
		72, 4, 72, 529, 8, 72, 11, 72, 12, 72, 530, 1, 72, 3, 72, 534, 8, 72, 1,
		72, 1, 72, 1, 73, 1, 73, 3, 73, 540, 8, 73, 1, 73, 4, 73, 543, 8, 73, 11,
		73, 12, 73, 544, 1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 1, 77, 1, 77,
		1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1, 82, 1, 82, 1,
		83, 1, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87, 1, 87, 1, 88,
		1, 88, 1, 89, 1, 89, 1, 90, 1, 90, 1, 91, 1, 91, 1, 92, 1, 92, 1, 93, 1,
		93, 1, 94, 1, 94, 1, 95, 1, 95, 1, 96, 1, 96, 1, 97, 1, 97, 1, 98, 1, 98,
		1, 99, 1, 99, 1, 100, 1, 100, 1, 472, 0, 101, 1, 1, 3, 2, 5, 3, 7, 4, 9,
		5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14,
		29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23,
		47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32,
		65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41,
		83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50,
		101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58,
		117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66,
		133, 0, 135, 0, 137, 0, 139, 0, 141, 0, 143, 0, 145, 0, 147, 0, 149, 0,
		151, 0, 153, 0, 155, 0, 157, 0, 159, 0, 161, 0, 163, 0, 165, 0, 167, 0,
		169, 0, 171, 0, 173, 0, 175, 0, 177, 0, 179, 0, 181, 0, 183, 0, 185, 0,
		187, 0, 189, 0, 191, 0, 193, 0, 195, 0, 197, 0, 199, 0, 201, 0, 1, 0, 34,
		3, 0, 10, 10, 13, 13, 34, 34, 2, 0, 9, 9, 32, 32, 2, 0, 10, 10, 13, 13,
		3, 0, 65, 90, 95, 95, 97, 122, 2, 0, 64, 64, 94, 94, 7, 0, 196, 196, 214,
		214, 220, 220, 223, 223, 228, 228, 246, 246, 252, 252, 1, 0, 48, 57, 2,
		0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 65, 65, 97, 97, 2, 0,
		66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 70,
		70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0, 73,
		73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0, 76,
		76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0, 79,
		79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0, 82,
		82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85,
		85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0, 88,
		88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122, 585, 0, 1,
		1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
		0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1,
		0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101,
		1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0,
		0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1,
		0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0,
		123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0,
		0, 0, 0, 131, 1, 0, 0, 0, 1, 203, 1, 0, 0, 0, 3, 205, 1, 0, 0, 0, 5, 209,
		1, 0, 0, 0, 7, 212, 1, 0, 0, 0, 9, 215, 1, 0, 0, 0, 11, 218, 1, 0, 0, 0,
		13, 221, 1, 0, 0, 0, 15, 224, 1, 0, 0, 0, 17, 227, 1, 0, 0, 0, 19, 230,
		1, 0, 0, 0, 21, 236, 1, 0, 0, 0, 23, 238, 1, 0, 0, 0, 25, 247, 1, 0, 0,
		0, 27, 251, 1, 0, 0, 0, 29, 257, 1, 0, 0, 0, 31, 263, 1, 0, 0, 0, 33, 273,
		1, 0, 0, 0, 35, 282, 1, 0, 0, 0, 37, 285, 1, 0, 0, 0, 39, 290, 1, 0, 0,
		0, 41, 295, 1, 0, 0, 0, 43, 302, 1, 0, 0, 0, 45, 312, 1, 0, 0, 0, 47, 317,
		1, 0, 0, 0, 49, 321, 1, 0, 0, 0, 51, 327, 1, 0, 0, 0, 53, 334, 1, 0, 0,
		0, 55, 339, 1, 0, 0, 0, 57, 345, 1, 0, 0, 0, 59, 350, 1, 0, 0, 0, 61, 355,
		1, 0, 0, 0, 63, 359, 1, 0, 0, 0, 65, 365, 1, 0, 0, 0, 67, 371, 1, 0, 0,
		0, 69, 378, 1, 0, 0, 0, 71, 380, 1, 0, 0, 0, 73, 382, 1, 0, 0, 0, 75, 384,
		1, 0, 0, 0, 77, 386, 1, 0, 0, 0, 79, 388, 1, 0, 0, 0, 81, 390, 1, 0, 0,
		0, 83, 392, 1, 0, 0, 0, 85, 395, 1, 0, 0, 0, 87, 397, 1, 0, 0, 0, 89, 400,
		1, 0, 0, 0, 91, 402, 1, 0, 0, 0, 93, 404, 1, 0, 0, 0, 95, 406, 1, 0, 0,
		0, 97, 408, 1, 0, 0, 0, 99, 410, 1, 0, 0, 0, 101, 412, 1, 0, 0, 0, 103,
		414, 1, 0, 0, 0, 105, 416, 1, 0, 0, 0, 107, 418, 1, 0, 0, 0, 109, 421,
		1, 0, 0, 0, 111, 424, 1, 0, 0, 0, 113, 427, 1, 0, 0, 0, 115, 430, 1, 0,
		0, 0, 117, 433, 1, 0, 0, 0, 119, 436, 1, 0, 0, 0, 121, 438, 1, 0, 0, 0,
		123, 442, 1, 0, 0, 0, 125, 451, 1, 0, 0, 0, 127, 462, 1, 0, 0, 0, 129,
		466, 1, 0, 0, 0, 131, 480, 1, 0, 0, 0, 133, 493, 1, 0, 0, 0, 135, 498,
		1, 0, 0, 0, 137, 500, 1, 0, 0, 0, 139, 502, 1, 0, 0, 0, 141, 504, 1, 0,
		0, 0, 143, 525, 1, 0, 0, 0, 145, 533, 1, 0, 0, 0, 147, 537, 1, 0, 0, 0,
		149, 546, 1, 0, 0, 0, 151, 548, 1, 0, 0, 0, 153, 550, 1, 0, 0, 0, 155,
		552, 1, 0, 0, 0, 157, 554, 1, 0, 0, 0, 159, 556, 1, 0, 0, 0, 161, 558,
		1, 0, 0, 0, 163, 560, 1, 0, 0, 0, 165, 562, 1, 0, 0, 0, 167, 564, 1, 0,
		0, 0, 169, 566, 1, 0, 0, 0, 171, 568, 1, 0, 0, 0, 173, 570, 1, 0, 0, 0,
		175, 572, 1, 0, 0, 0, 177, 574, 1, 0, 0, 0, 179, 576, 1, 0, 0, 0, 181,
		578, 1, 0, 0, 0, 183, 580, 1, 0, 0, 0, 185, 582, 1, 0, 0, 0, 187, 584,
		1, 0, 0, 0, 189, 586, 1, 0, 0, 0, 191, 588, 1, 0, 0, 0, 193, 590, 1, 0,
		0, 0, 195, 592, 1, 0, 0, 0, 197, 594, 1, 0, 0, 0, 199, 596, 1, 0, 0, 0,
		201, 598, 1, 0, 0, 0, 203, 204, 5, 44, 0, 0, 204, 2, 1, 0, 0, 0, 205, 206,
		5, 46, 0, 0, 206, 207, 5, 46, 0, 0, 207, 208, 5, 46, 0, 0, 208, 4, 1, 0,
		0, 0, 209, 210, 5, 60, 0, 0, 210, 211, 5, 60, 0, 0, 211, 6, 1, 0, 0, 0,
		212, 213, 5, 62, 0, 0, 213, 214, 5, 62, 0, 0, 214, 8, 1, 0, 0, 0, 215,
		216, 5, 60, 0, 0, 216, 217, 5, 61, 0, 0, 217, 10, 1, 0, 0, 0, 218, 219,
		5, 62, 0, 0, 219, 220, 5, 61, 0, 0, 220, 12, 1, 0, 0, 0, 221, 222, 5, 61,
		0, 0, 222, 223, 5, 61, 0, 0, 223, 14, 1, 0, 0, 0, 224, 225, 5, 33, 0, 0,
		225, 226, 5, 61, 0, 0, 226, 16, 1, 0, 0, 0, 227, 228, 5, 37, 0, 0, 228,
		18, 1, 0, 0, 0, 229, 231, 3, 141, 70, 0, 230, 229, 1, 0, 0, 0, 231, 232,
		1, 0, 0, 0, 232, 230, 1, 0, 0, 0, 232, 233, 1, 0, 0, 0, 233, 20, 1, 0,
		0, 0, 234, 237, 3, 143, 71, 0, 235, 237, 3, 145, 72, 0, 236, 234, 1, 0,
		0, 0, 236, 235, 1, 0, 0, 0, 237, 22, 1, 0, 0, 0, 238, 242, 5, 34, 0, 0,
		239, 241, 8, 0, 0, 0, 240, 239, 1, 0, 0, 0, 241, 244, 1, 0, 0, 0, 242,
		240, 1, 0, 0, 0, 242, 243, 1, 0, 0, 0, 243, 245, 1, 0, 0, 0, 244, 242,
		1, 0, 0, 0, 245, 246, 5, 34, 0, 0, 246, 24, 1, 0, 0, 0, 247, 248, 3, 191,
		95, 0, 248, 249, 3, 149, 74, 0, 249, 250, 3, 183, 91, 0, 250, 26, 1, 0,
		0, 0, 251, 252, 3, 153, 76, 0, 252, 253, 3, 177, 88, 0, 253, 254, 3, 175,
		87, 0, 254, 255, 3, 185, 92, 0, 255, 256, 3, 187, 93, 0, 256, 28, 1, 0,
		0, 0, 257, 258, 3, 153, 76, 0, 258, 259, 3, 171, 85, 0, 259, 260, 3, 149,
		74, 0, 260, 261, 3, 185, 92, 0, 261, 262, 3, 185, 92, 0, 262, 30, 1, 0,
		0, 0, 263, 264, 3, 179, 89, 0, 264, 265, 3, 183, 91, 0, 265, 266, 3, 177,
		88, 0, 266, 267, 3, 187, 93, 0, 267, 268, 3, 177, 88, 0, 268, 269, 3, 187,
		93, 0, 269, 270, 3, 197, 98, 0, 270, 271, 3, 179, 89, 0, 271, 272, 3, 157,
		78, 0, 272, 32, 1, 0, 0, 0, 273, 274, 3, 165, 82, 0, 274, 275, 3, 175,
		87, 0, 275, 276, 3, 185, 92, 0, 276, 277, 3, 187, 93, 0, 277, 278, 3, 149,
		74, 0, 278, 279, 3, 175, 87, 0, 279, 280, 3, 153, 76, 0, 280, 281, 3, 157,
		78, 0, 281, 34, 1, 0, 0, 0, 282, 283, 3, 165, 82, 0, 283, 284, 3, 159,
		79, 0, 284, 36, 1, 0, 0, 0, 285, 286, 3, 157, 78, 0, 286, 287, 3, 171,
		85, 0, 287, 288, 3, 185, 92, 0, 288, 289, 3, 157, 78, 0, 289, 38, 1, 0,
		0, 0, 290, 291, 3, 175, 87, 0, 291, 292, 3, 189, 94, 0, 292, 293, 3, 171,
		85, 0, 293, 294, 3, 171, 85, 0, 294, 40, 1, 0, 0, 0, 295, 296, 3, 183,
		91, 0, 296, 297, 3, 157, 78, 0, 297, 298, 3, 187, 93, 0, 298, 299, 3, 189,
		94, 0, 299, 300, 3, 183, 91, 0, 300, 301, 3, 175, 87, 0, 301, 42, 1, 0,
		0, 0, 302, 303, 3, 175, 87, 0, 303, 304, 3, 149, 74, 0, 304, 305, 3, 173,
		86, 0, 305, 306, 3, 157, 78, 0, 306, 307, 3, 185, 92, 0, 307, 308, 3, 179,
		89, 0, 308, 309, 3, 149, 74, 0, 309, 310, 3, 153, 76, 0, 310, 311, 3, 157,
		78, 0, 311, 44, 1, 0, 0, 0, 312, 313, 3, 159, 79, 0, 313, 314, 3, 189,
		94, 0, 314, 315, 3, 175, 87, 0, 315, 316, 3, 153, 76, 0, 316, 46, 1, 0,
		0, 0, 317, 318, 3, 165, 82, 0, 318, 319, 3, 175, 87, 0, 319, 320, 3, 187,
		93, 0, 320, 48, 1, 0, 0, 0, 321, 322, 3, 159, 79, 0, 322, 323, 3, 171,
		85, 0, 323, 324, 3, 177, 88, 0, 324, 325, 3, 149, 74, 0, 325, 326, 3, 187,
		93, 0, 326, 50, 1, 0, 0, 0, 327, 328, 3, 185, 92, 0, 328, 329, 3, 187,
		93, 0, 329, 330, 3, 183, 91, 0, 330, 331, 3, 165, 82, 0, 331, 332, 3, 175,
		87, 0, 332, 333, 3, 161, 80, 0, 333, 52, 1, 0, 0, 0, 334, 335, 3, 191,
		95, 0, 335, 336, 3, 177, 88, 0, 336, 337, 3, 165, 82, 0, 337, 338, 3, 155,
		77, 0, 338, 54, 1, 0, 0, 0, 339, 340, 3, 157, 78, 0, 340, 341, 3, 191,
		95, 0, 341, 342, 3, 157, 78, 0, 342, 343, 3, 175, 87, 0, 343, 344, 3, 187,
		93, 0, 344, 56, 1, 0, 0, 0, 345, 346, 3, 173, 86, 0, 346, 347, 3, 157,
		78, 0, 347, 348, 3, 187, 93, 0, 348, 349, 3, 149, 74, 0, 349, 58, 1, 0,
		0, 0, 350, 351, 3, 187, 93, 0, 351, 352, 3, 157, 78, 0, 352, 353, 3, 185,
		92, 0, 353, 354, 3, 187, 93, 0, 354, 60, 1, 0, 0, 0, 355, 356, 3, 201,
		100, 0, 356, 357, 3, 165, 82, 0, 357, 358, 3, 159, 79, 0, 358, 62, 1, 0,
		0, 0, 359, 360, 3, 201, 100, 0, 360, 361, 3, 157, 78, 0, 361, 362, 3, 171,
		85, 0, 362, 363, 3, 165, 82, 0, 363, 364, 3, 159, 79, 0, 364, 64, 1, 0,
		0, 0, 365, 366, 3, 201, 100, 0, 366, 367, 3, 157, 78, 0, 367, 368, 3, 171,
		85, 0, 368, 369, 3, 185, 92, 0, 369, 370, 3, 157, 78, 0, 370, 66, 1, 0,
		0, 0, 371, 372, 3, 201, 100, 0, 372, 373, 3, 157, 78, 0, 373, 374, 3, 175,
		87, 0, 374, 375, 3, 155, 77, 0, 375, 376, 3, 165, 82, 0, 376, 377, 3, 159,
		79, 0, 377, 68, 1, 0, 0, 0, 378, 379, 5, 40, 0, 0, 379, 70, 1, 0, 0, 0,
		380, 381, 5, 41, 0, 0, 381, 72, 1, 0, 0, 0, 382, 383, 5, 91, 0, 0, 383,
		74, 1, 0, 0, 0, 384, 385, 5, 93, 0, 0, 385, 76, 1, 0, 0, 0, 386, 387, 5,
		123, 0, 0, 387, 78, 1, 0, 0, 0, 388, 389, 5, 125, 0, 0, 389, 80, 1, 0,
		0, 0, 390, 391, 5, 38, 0, 0, 391, 82, 1, 0, 0, 0, 392, 393, 5, 38, 0, 0,
		393, 394, 5, 38, 0, 0, 394, 84, 1, 0, 0, 0, 395, 396, 5, 124, 0, 0, 396,
		86, 1, 0, 0, 0, 397, 398, 5, 124, 0, 0, 398, 399, 5, 124, 0, 0, 399, 88,
		1, 0, 0, 0, 400, 401, 5, 43, 0, 0, 401, 90, 1, 0, 0, 0, 402, 403, 5, 45,
		0, 0, 403, 92, 1, 0, 0, 0, 404, 405, 5, 47, 0, 0, 405, 94, 1, 0, 0, 0,
		406, 407, 5, 42, 0, 0, 407, 96, 1, 0, 0, 0, 408, 409, 5, 126, 0, 0, 409,
		98, 1, 0, 0, 0, 410, 411, 5, 33, 0, 0, 411, 100, 1, 0, 0, 0, 412, 413,
		5, 61, 0, 0, 413, 102, 1, 0, 0, 0, 414, 415, 5, 60, 0, 0, 415, 104, 1,
		0, 0, 0, 416, 417, 5, 62, 0, 0, 417, 106, 1, 0, 0, 0, 418, 419, 5, 43,
		0, 0, 419, 420, 5, 61, 0, 0, 420, 108, 1, 0, 0, 0, 421, 422, 5, 45, 0,
		0, 422, 423, 5, 61, 0, 0, 423, 110, 1, 0, 0, 0, 424, 425, 5, 42, 0, 0,
		425, 426, 5, 61, 0, 0, 426, 112, 1, 0, 0, 0, 427, 428, 5, 47, 0, 0, 428,
		429, 5, 61, 0, 0, 429, 114, 1, 0, 0, 0, 430, 431, 5, 38, 0, 0, 431, 432,
		5, 61, 0, 0, 432, 116, 1, 0, 0, 0, 433, 434, 5, 124, 0, 0, 434, 435, 5,
		61, 0, 0, 435, 118, 1, 0, 0, 0, 436, 437, 5, 46, 0, 0, 437, 120, 1, 0,
		0, 0, 438, 439, 5, 59, 0, 0, 439, 122, 1, 0, 0, 0, 440, 443, 3, 133, 66,
		0, 441, 443, 3, 141, 70, 0, 442, 440, 1, 0, 0, 0, 442, 441, 1, 0, 0, 0,
		443, 447, 1, 0, 0, 0, 444, 446, 3, 135, 67, 0, 445, 444, 1, 0, 0, 0, 446,
		449, 1, 0, 0, 0, 447, 445, 1, 0, 0, 0, 447, 448, 1, 0, 0, 0, 448, 124,
		1, 0, 0, 0, 449, 447, 1, 0, 0, 0, 450, 452, 7, 1, 0, 0, 451, 450, 1, 0,
		0, 0, 452, 453, 1, 0, 0, 0, 453, 451, 1, 0, 0, 0, 453, 454, 1, 0, 0, 0,
		454, 455, 1, 0, 0, 0, 455, 456, 6, 62, 0, 0, 456, 126, 1, 0, 0, 0, 457,
		459, 5, 13, 0, 0, 458, 460, 5, 10, 0, 0, 459, 458, 1, 0, 0, 0, 459, 460,
		1, 0, 0, 0, 460, 463, 1, 0, 0, 0, 461, 463, 5, 10, 0, 0, 462, 457, 1, 0,
		0, 0, 462, 461, 1, 0, 0, 0, 463, 464, 1, 0, 0, 0, 464, 465, 6, 63, 0, 0,
		465, 128, 1, 0, 0, 0, 466, 467, 5, 47, 0, 0, 467, 468, 5, 42, 0, 0, 468,
		472, 1, 0, 0, 0, 469, 471, 9, 0, 0, 0, 470, 469, 1, 0, 0, 0, 471, 474,
		1, 0, 0, 0, 472, 473, 1, 0, 0, 0, 472, 470, 1, 0, 0, 0, 473, 475, 1, 0,
		0, 0, 474, 472, 1, 0, 0, 0, 475, 476, 5, 42, 0, 0, 476, 477, 5, 47, 0,
		0, 477, 478, 1, 0, 0, 0, 478, 479, 6, 64, 0, 0, 479, 130, 1, 0, 0, 0, 480,
		481, 5, 47, 0, 0, 481, 482, 5, 47, 0, 0, 482, 486, 1, 0, 0, 0, 483, 485,
		8, 2, 0, 0, 484, 483, 1, 0, 0, 0, 485, 488, 1, 0, 0, 0, 486, 484, 1, 0,
		0, 0, 486, 487, 1, 0, 0, 0, 487, 489, 1, 0, 0, 0, 488, 486, 1, 0, 0, 0,
		489, 490, 6, 65, 1, 0, 490, 132, 1, 0, 0, 0, 491, 494, 3, 139, 69, 0, 492,
		494, 7, 3, 0, 0, 493, 491, 1, 0, 0, 0, 493, 492, 1, 0, 0, 0, 494, 134,
		1, 0, 0, 0, 495, 499, 3, 133, 66, 0, 496, 499, 3, 137, 68, 0, 497, 499,
		3, 141, 70, 0, 498, 495, 1, 0, 0, 0, 498, 496, 1, 0, 0, 0, 498, 497, 1,
		0, 0, 0, 499, 136, 1, 0, 0, 0, 500, 501, 7, 4, 0, 0, 501, 138, 1, 0, 0,
		0, 502, 503, 7, 5, 0, 0, 503, 140, 1, 0, 0, 0, 504, 505, 7, 6, 0, 0, 505,
		142, 1, 0, 0, 0, 506, 508, 3, 141, 70, 0, 507, 506, 1, 0, 0, 0, 508, 511,
		1, 0, 0, 0, 509, 507, 1, 0, 0, 0, 509, 510, 1, 0, 0, 0, 510, 512, 1, 0,
		0, 0, 511, 509, 1, 0, 0, 0, 512, 514, 5, 46, 0, 0, 513, 515, 3, 141, 70,
		0, 514, 513, 1, 0, 0, 0, 515, 516, 1, 0, 0, 0, 516, 514, 1, 0, 0, 0, 516,
		517, 1, 0, 0, 0, 517, 526, 1, 0, 0, 0, 518, 520, 3, 141, 70, 0, 519, 518,
		1, 0, 0, 0, 520, 521, 1, 0, 0, 0, 521, 519, 1, 0, 0, 0, 521, 522, 1, 0,
		0, 0, 522, 523, 1, 0, 0, 0, 523, 524, 5, 46, 0, 0, 524, 526, 1, 0, 0, 0,
		525, 509, 1, 0, 0, 0, 525, 519, 1, 0, 0, 0, 526, 144, 1, 0, 0, 0, 527,
		529, 3, 141, 70, 0, 528, 527, 1, 0, 0, 0, 529, 530, 1, 0, 0, 0, 530, 528,
		1, 0, 0, 0, 530, 531, 1, 0, 0, 0, 531, 534, 1, 0, 0, 0, 532, 534, 3, 143,
		71, 0, 533, 528, 1, 0, 0, 0, 533, 532, 1, 0, 0, 0, 534, 535, 1, 0, 0, 0,
		535, 536, 3, 147, 73, 0, 536, 146, 1, 0, 0, 0, 537, 539, 7, 7, 0, 0, 538,
		540, 7, 8, 0, 0, 539, 538, 1, 0, 0, 0, 539, 540, 1, 0, 0, 0, 540, 542,
		1, 0, 0, 0, 541, 543, 3, 141, 70, 0, 542, 541, 1, 0, 0, 0, 543, 544, 1,
		0, 0, 0, 544, 542, 1, 0, 0, 0, 544, 545, 1, 0, 0, 0, 545, 148, 1, 0, 0,
		0, 546, 547, 7, 9, 0, 0, 547, 150, 1, 0, 0, 0, 548, 549, 7, 10, 0, 0, 549,
		152, 1, 0, 0, 0, 550, 551, 7, 11, 0, 0, 551, 154, 1, 0, 0, 0, 552, 553,
		7, 12, 0, 0, 553, 156, 1, 0, 0, 0, 554, 555, 7, 7, 0, 0, 555, 158, 1, 0,
		0, 0, 556, 557, 7, 13, 0, 0, 557, 160, 1, 0, 0, 0, 558, 559, 7, 14, 0,
		0, 559, 162, 1, 0, 0, 0, 560, 561, 7, 15, 0, 0, 561, 164, 1, 0, 0, 0, 562,
		563, 7, 16, 0, 0, 563, 166, 1, 0, 0, 0, 564, 565, 7, 17, 0, 0, 565, 168,
		1, 0, 0, 0, 566, 567, 7, 18, 0, 0, 567, 170, 1, 0, 0, 0, 568, 569, 7, 19,
		0, 0, 569, 172, 1, 0, 0, 0, 570, 571, 7, 20, 0, 0, 571, 174, 1, 0, 0, 0,
		572, 573, 7, 21, 0, 0, 573, 176, 1, 0, 0, 0, 574, 575, 7, 22, 0, 0, 575,
		178, 1, 0, 0, 0, 576, 577, 7, 23, 0, 0, 577, 180, 1, 0, 0, 0, 578, 579,
		7, 24, 0, 0, 579, 182, 1, 0, 0, 0, 580, 581, 7, 25, 0, 0, 581, 184, 1,
		0, 0, 0, 582, 583, 7, 26, 0, 0, 583, 186, 1, 0, 0, 0, 584, 585, 7, 27,
		0, 0, 585, 188, 1, 0, 0, 0, 586, 587, 7, 28, 0, 0, 587, 190, 1, 0, 0, 0,
		588, 589, 7, 29, 0, 0, 589, 192, 1, 0, 0, 0, 590, 591, 7, 30, 0, 0, 591,
		194, 1, 0, 0, 0, 592, 593, 7, 31, 0, 0, 593, 196, 1, 0, 0, 0, 594, 595,
		7, 32, 0, 0, 595, 198, 1, 0, 0, 0, 596, 597, 7, 33, 0, 0, 597, 200, 1,
		0, 0, 0, 598, 599, 5, 35, 0, 0, 599, 202, 1, 0, 0, 0, 21, 0, 232, 236,
		242, 442, 447, 453, 459, 462, 472, 486, 493, 498, 509, 516, 521, 525, 530,
		533, 539, 544, 2, 6, 0, 0, 0, 2, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DaedalusLexerInit initializes any static state used to implement DaedalusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDaedalusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DaedalusLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.once.Do(daedaluslexerLexerInit)
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	DaedalusLexerInit()
	l := new(DaedalusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &daedaluslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0           = 1
	DaedalusLexerT__1           = 2
	DaedalusLexerT__2           = 3
	DaedalusLexerT__3           = 4
	DaedalusLexerT__4           = 5
	DaedalusLexerT__5           = 6
	DaedalusLexerT__6           = 7
	DaedalusLexerT__7           = 8
	DaedalusLexerT__8           = 9
	DaedalusLexerIntegerLiteral = 10
	DaedalusLexerFloatLiteral   = 11
	DaedalusLexerStringLiteral  = 12
	DaedalusLexerVar            = 13
	DaedalusLexerConst          = 14
	DaedalusLexerClass          = 15
	DaedalusLexerPrototype      = 16
	DaedalusLexerInstance       = 17
	DaedalusLexerIf             = 18
	DaedalusLexerElse           = 19
	DaedalusLexerNull           = 20
	DaedalusLexerReturn         = 21
	DaedalusLexerNamespace      = 22
	DaedalusLexerFunc           = 23
	DaedalusLexerInt            = 24
	DaedalusLexerFloat          = 25
	DaedalusLexerStringKeyword  = 26
	DaedalusLexerVoid           = 27
	DaedalusLexerEvent          = 28
	DaedalusLexerMeta           = 29
	DaedalusLexerTest           = 30
	DaedalusLexerMif            = 31
	DaedalusLexerMelif          = 32
	DaedalusLexerMelse          = 33
	DaedalusLexerMendif         = 34
	DaedalusLexerLeftParen      = 35
	DaedalusLexerRightParen     = 36
	DaedalusLexerLeftBracket    = 37
	DaedalusLexerRightBracket   = 38
	DaedalusLexerLeftBrace      = 39
	DaedalusLexerRightBrace     = 40
	DaedalusLexerBitAnd         = 41
	DaedalusLexerAnd            = 42
	DaedalusLexerBitOr          = 43
	DaedalusLexerOr             = 44
	DaedalusLexerPlus           = 45
	DaedalusLexerMinus          = 46
	DaedalusLexerDiv            = 47
	DaedalusLexerStar           = 48
	DaedalusLexerTilde          = 49
	DaedalusLexerNot            = 50
	DaedalusLexerAssign         = 51
	DaedalusLexerLess           = 52
	DaedalusLexerGreater        = 53
	DaedalusLexerPlusAssign     = 54
	DaedalusLexerMinusAssign    = 55
	DaedalusLexerStarAssign     = 56
	DaedalusLexerDivAssign      = 57
	DaedalusLexerAndAssign      = 58
	DaedalusLexerOrAssign       = 59
	DaedalusLexerDot            = 60
	DaedalusLexerSemi           = 61
	DaedalusLexerIdentifier     = 62
	DaedalusLexerWhitespace     = 63
	DaedalusLexerNewline        = 64
	DaedalusLexerBlockComment   = 65
	DaedalusLexerLineComment    = 66
)

const (
	// Channel that contains comments
	COMMENTS int = 2
)
