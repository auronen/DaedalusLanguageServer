// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var daedaluslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func daedaluslexerLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "','", "'<<'", "'>>'", "'<='", "'>='", "'=='", "'!='", "'%'", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "'('", "')'", "'['", "']'",
		"'{'", "'}'", "'&'", "'&&'", "'|'", "'||'", "'+'", "'-'", "'/'", "'*'",
		"'~'", "'!'", "'='", "'<'", "'>'", "'+='", "'-='", "'*='", "'/='", "'&='",
		"'|='", "'.'", "';'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "IntegerLiteral", "FloatLiteral",
		"StringLiteral", "Var", "Const", "Class", "Prototype", "Instance", "If",
		"Else", "Null", "Return", "Namespace", "Func", "Int", "Float", "StringKeyword",
		"Void", "Event", "Meta", "While", "Continue", "Break", "Test", "Mif",
		"Melif", "Melse", "Mendif", "LeftParen", "RightParen", "LeftBracket",
		"RightBracket", "LeftBrace", "RightBrace", "BitAnd", "And", "BitOr",
		"Or", "Plus", "Minus", "Div", "Star", "Tilde", "Not", "Assign", "Less",
		"Greater", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", "AndAssign",
		"OrAssign", "Dot", "Semi", "Identifier", "Whitespace", "Newline", "BlockComment",
		"LineComment",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "IntegerLiteral",
		"FloatLiteral", "StringLiteral", "Var", "Const", "Class", "Prototype",
		"Instance", "If", "Else", "Null", "Return", "Namespace", "Func", "Int",
		"Float", "StringKeyword", "Void", "Event", "Meta", "While", "Continue",
		"Break", "Test", "Mif", "Melif", "Melse", "Mendif", "LeftParen", "RightParen",
		"LeftBracket", "RightBracket", "LeftBrace", "RightBrace", "BitAnd",
		"And", "BitOr", "Or", "Plus", "Minus", "Div", "Star", "Tilde", "Not",
		"Assign", "Less", "Greater", "PlusAssign", "MinusAssign", "StarAssign",
		"DivAssign", "AndAssign", "OrAssign", "Dot", "Semi", "Identifier", "Whitespace",
		"Newline", "BlockComment", "LineComment", "NonDigit", "IdContinue",
		"IdSpecial", "GermanCharacter", "Digit", "PointFloat", "ExponentFloat",
		"Exponent", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L",
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
		"M_",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 68, 621, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99,
		7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7, 102, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 4, 8, 231, 8, 8, 11, 8,
		12, 8, 232, 1, 9, 1, 9, 3, 9, 237, 8, 9, 1, 10, 1, 10, 5, 10, 241, 8, 10,
		10, 10, 12, 10, 244, 9, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16,
		1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40,
		1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50,
		1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1,
		55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58,
		1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1,
		63, 1, 63, 3, 63, 464, 8, 63, 1, 63, 5, 63, 467, 8, 63, 10, 63, 12, 63,
		470, 9, 63, 1, 64, 4, 64, 473, 8, 64, 11, 64, 12, 64, 474, 1, 64, 1, 64,
		1, 65, 1, 65, 3, 65, 481, 8, 65, 1, 65, 3, 65, 484, 8, 65, 1, 65, 1, 65,
		1, 66, 1, 66, 1, 66, 1, 66, 5, 66, 492, 8, 66, 10, 66, 12, 66, 495, 9,
		66, 1, 66, 1, 66, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 5, 67,
		506, 8, 67, 10, 67, 12, 67, 509, 9, 67, 1, 67, 1, 67, 1, 68, 1, 68, 3,
		68, 515, 8, 68, 1, 69, 1, 69, 1, 69, 3, 69, 520, 8, 69, 1, 70, 1, 70, 1,
		71, 1, 71, 1, 72, 1, 72, 1, 73, 5, 73, 529, 8, 73, 10, 73, 12, 73, 532,
		9, 73, 1, 73, 1, 73, 4, 73, 536, 8, 73, 11, 73, 12, 73, 537, 1, 73, 4,
		73, 541, 8, 73, 11, 73, 12, 73, 542, 1, 73, 1, 73, 3, 73, 547, 8, 73, 1,
		74, 4, 74, 550, 8, 74, 11, 74, 12, 74, 551, 1, 74, 3, 74, 555, 8, 74, 1,
		74, 1, 74, 1, 75, 1, 75, 3, 75, 561, 8, 75, 1, 75, 4, 75, 564, 8, 75, 11,
		75, 12, 75, 565, 1, 76, 1, 76, 1, 77, 1, 77, 1, 78, 1, 78, 1, 79, 1, 79,
		1, 80, 1, 80, 1, 81, 1, 81, 1, 82, 1, 82, 1, 83, 1, 83, 1, 84, 1, 84, 1,
		85, 1, 85, 1, 86, 1, 86, 1, 87, 1, 87, 1, 88, 1, 88, 1, 89, 1, 89, 1, 90,
		1, 90, 1, 91, 1, 91, 1, 92, 1, 92, 1, 93, 1, 93, 1, 94, 1, 94, 1, 95, 1,
		95, 1, 96, 1, 96, 1, 97, 1, 97, 1, 98, 1, 98, 1, 99, 1, 99, 1, 100, 1,
		100, 1, 101, 1, 101, 1, 102, 1, 102, 1, 493, 0, 103, 1, 1, 3, 2, 5, 3,
		7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13,
		27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22,
		45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31,
		63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40,
		81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49,
		99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57,
		115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65,
		131, 66, 133, 67, 135, 68, 137, 0, 139, 0, 141, 0, 143, 0, 145, 0, 147,
		0, 149, 0, 151, 0, 153, 0, 155, 0, 157, 0, 159, 0, 161, 0, 163, 0, 165,
		0, 167, 0, 169, 0, 171, 0, 173, 0, 175, 0, 177, 0, 179, 0, 181, 0, 183,
		0, 185, 0, 187, 0, 189, 0, 191, 0, 193, 0, 195, 0, 197, 0, 199, 0, 201,
		0, 203, 0, 205, 0, 1, 0, 34, 3, 0, 10, 10, 13, 13, 34, 34, 2, 0, 9, 9,
		32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95, 97, 122, 2, 0, 64,
		64, 94, 94, 7, 0, 196, 196, 214, 214, 220, 220, 223, 223, 228, 228, 246,
		246, 252, 252, 1, 0, 48, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45,
		45, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2,
		0, 68, 68, 100, 100, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2,
		0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2,
		0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2,
		0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2,
		0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2,
		0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2,
		0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2,
		0, 90, 90, 122, 122, 606, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0,
		0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
		0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0,
		105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119,
		1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0,
		0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1,
		0, 0, 0, 0, 135, 1, 0, 0, 0, 1, 207, 1, 0, 0, 0, 3, 209, 1, 0, 0, 0, 5,
		212, 1, 0, 0, 0, 7, 215, 1, 0, 0, 0, 9, 218, 1, 0, 0, 0, 11, 221, 1, 0,
		0, 0, 13, 224, 1, 0, 0, 0, 15, 227, 1, 0, 0, 0, 17, 230, 1, 0, 0, 0, 19,
		236, 1, 0, 0, 0, 21, 238, 1, 0, 0, 0, 23, 247, 1, 0, 0, 0, 25, 251, 1,
		0, 0, 0, 27, 257, 1, 0, 0, 0, 29, 263, 1, 0, 0, 0, 31, 273, 1, 0, 0, 0,
		33, 282, 1, 0, 0, 0, 35, 285, 1, 0, 0, 0, 37, 290, 1, 0, 0, 0, 39, 295,
		1, 0, 0, 0, 41, 302, 1, 0, 0, 0, 43, 312, 1, 0, 0, 0, 45, 317, 1, 0, 0,
		0, 47, 321, 1, 0, 0, 0, 49, 327, 1, 0, 0, 0, 51, 334, 1, 0, 0, 0, 53, 339,
		1, 0, 0, 0, 55, 345, 1, 0, 0, 0, 57, 350, 1, 0, 0, 0, 59, 356, 1, 0, 0,
		0, 61, 365, 1, 0, 0, 0, 63, 371, 1, 0, 0, 0, 65, 376, 1, 0, 0, 0, 67, 380,
		1, 0, 0, 0, 69, 386, 1, 0, 0, 0, 71, 392, 1, 0, 0, 0, 73, 399, 1, 0, 0,
		0, 75, 401, 1, 0, 0, 0, 77, 403, 1, 0, 0, 0, 79, 405, 1, 0, 0, 0, 81, 407,
		1, 0, 0, 0, 83, 409, 1, 0, 0, 0, 85, 411, 1, 0, 0, 0, 87, 413, 1, 0, 0,
		0, 89, 416, 1, 0, 0, 0, 91, 418, 1, 0, 0, 0, 93, 421, 1, 0, 0, 0, 95, 423,
		1, 0, 0, 0, 97, 425, 1, 0, 0, 0, 99, 427, 1, 0, 0, 0, 101, 429, 1, 0, 0,
		0, 103, 431, 1, 0, 0, 0, 105, 433, 1, 0, 0, 0, 107, 435, 1, 0, 0, 0, 109,
		437, 1, 0, 0, 0, 111, 439, 1, 0, 0, 0, 113, 442, 1, 0, 0, 0, 115, 445,
		1, 0, 0, 0, 117, 448, 1, 0, 0, 0, 119, 451, 1, 0, 0, 0, 121, 454, 1, 0,
		0, 0, 123, 457, 1, 0, 0, 0, 125, 459, 1, 0, 0, 0, 127, 463, 1, 0, 0, 0,
		129, 472, 1, 0, 0, 0, 131, 483, 1, 0, 0, 0, 133, 487, 1, 0, 0, 0, 135,
		501, 1, 0, 0, 0, 137, 514, 1, 0, 0, 0, 139, 519, 1, 0, 0, 0, 141, 521,
		1, 0, 0, 0, 143, 523, 1, 0, 0, 0, 145, 525, 1, 0, 0, 0, 147, 546, 1, 0,
		0, 0, 149, 554, 1, 0, 0, 0, 151, 558, 1, 0, 0, 0, 153, 567, 1, 0, 0, 0,
		155, 569, 1, 0, 0, 0, 157, 571, 1, 0, 0, 0, 159, 573, 1, 0, 0, 0, 161,
		575, 1, 0, 0, 0, 163, 577, 1, 0, 0, 0, 165, 579, 1, 0, 0, 0, 167, 581,
		1, 0, 0, 0, 169, 583, 1, 0, 0, 0, 171, 585, 1, 0, 0, 0, 173, 587, 1, 0,
		0, 0, 175, 589, 1, 0, 0, 0, 177, 591, 1, 0, 0, 0, 179, 593, 1, 0, 0, 0,
		181, 595, 1, 0, 0, 0, 183, 597, 1, 0, 0, 0, 185, 599, 1, 0, 0, 0, 187,
		601, 1, 0, 0, 0, 189, 603, 1, 0, 0, 0, 191, 605, 1, 0, 0, 0, 193, 607,
		1, 0, 0, 0, 195, 609, 1, 0, 0, 0, 197, 611, 1, 0, 0, 0, 199, 613, 1, 0,
		0, 0, 201, 615, 1, 0, 0, 0, 203, 617, 1, 0, 0, 0, 205, 619, 1, 0, 0, 0,
		207, 208, 5, 44, 0, 0, 208, 2, 1, 0, 0, 0, 209, 210, 5, 60, 0, 0, 210,
		211, 5, 60, 0, 0, 211, 4, 1, 0, 0, 0, 212, 213, 5, 62, 0, 0, 213, 214,
		5, 62, 0, 0, 214, 6, 1, 0, 0, 0, 215, 216, 5, 60, 0, 0, 216, 217, 5, 61,
		0, 0, 217, 8, 1, 0, 0, 0, 218, 219, 5, 62, 0, 0, 219, 220, 5, 61, 0, 0,
		220, 10, 1, 0, 0, 0, 221, 222, 5, 61, 0, 0, 222, 223, 5, 61, 0, 0, 223,
		12, 1, 0, 0, 0, 224, 225, 5, 33, 0, 0, 225, 226, 5, 61, 0, 0, 226, 14,
		1, 0, 0, 0, 227, 228, 5, 37, 0, 0, 228, 16, 1, 0, 0, 0, 229, 231, 3, 145,
		72, 0, 230, 229, 1, 0, 0, 0, 231, 232, 1, 0, 0, 0, 232, 230, 1, 0, 0, 0,
		232, 233, 1, 0, 0, 0, 233, 18, 1, 0, 0, 0, 234, 237, 3, 147, 73, 0, 235,
		237, 3, 149, 74, 0, 236, 234, 1, 0, 0, 0, 236, 235, 1, 0, 0, 0, 237, 20,
		1, 0, 0, 0, 238, 242, 5, 34, 0, 0, 239, 241, 8, 0, 0, 0, 240, 239, 1, 0,
		0, 0, 241, 244, 1, 0, 0, 0, 242, 240, 1, 0, 0, 0, 242, 243, 1, 0, 0, 0,
		243, 245, 1, 0, 0, 0, 244, 242, 1, 0, 0, 0, 245, 246, 5, 34, 0, 0, 246,
		22, 1, 0, 0, 0, 247, 248, 3, 195, 97, 0, 248, 249, 3, 153, 76, 0, 249,
		250, 3, 187, 93, 0, 250, 24, 1, 0, 0, 0, 251, 252, 3, 157, 78, 0, 252,
		253, 3, 181, 90, 0, 253, 254, 3, 179, 89, 0, 254, 255, 3, 189, 94, 0, 255,
		256, 3, 191, 95, 0, 256, 26, 1, 0, 0, 0, 257, 258, 3, 157, 78, 0, 258,
		259, 3, 175, 87, 0, 259, 260, 3, 153, 76, 0, 260, 261, 3, 189, 94, 0, 261,
		262, 3, 189, 94, 0, 262, 28, 1, 0, 0, 0, 263, 264, 3, 183, 91, 0, 264,
		265, 3, 187, 93, 0, 265, 266, 3, 181, 90, 0, 266, 267, 3, 191, 95, 0, 267,
		268, 3, 181, 90, 0, 268, 269, 3, 191, 95, 0, 269, 270, 3, 201, 100, 0,
		270, 271, 3, 183, 91, 0, 271, 272, 3, 161, 80, 0, 272, 30, 1, 0, 0, 0,
		273, 274, 3, 169, 84, 0, 274, 275, 3, 179, 89, 0, 275, 276, 3, 189, 94,
		0, 276, 277, 3, 191, 95, 0, 277, 278, 3, 153, 76, 0, 278, 279, 3, 179,
		89, 0, 279, 280, 3, 157, 78, 0, 280, 281, 3, 161, 80, 0, 281, 32, 1, 0,
		0, 0, 282, 283, 3, 169, 84, 0, 283, 284, 3, 163, 81, 0, 284, 34, 1, 0,
		0, 0, 285, 286, 3, 161, 80, 0, 286, 287, 3, 175, 87, 0, 287, 288, 3, 189,
		94, 0, 288, 289, 3, 161, 80, 0, 289, 36, 1, 0, 0, 0, 290, 291, 3, 179,
		89, 0, 291, 292, 3, 193, 96, 0, 292, 293, 3, 175, 87, 0, 293, 294, 3, 175,
		87, 0, 294, 38, 1, 0, 0, 0, 295, 296, 3, 187, 93, 0, 296, 297, 3, 161,
		80, 0, 297, 298, 3, 191, 95, 0, 298, 299, 3, 193, 96, 0, 299, 300, 3, 187,
		93, 0, 300, 301, 3, 179, 89, 0, 301, 40, 1, 0, 0, 0, 302, 303, 3, 179,
		89, 0, 303, 304, 3, 153, 76, 0, 304, 305, 3, 177, 88, 0, 305, 306, 3, 161,
		80, 0, 306, 307, 3, 189, 94, 0, 307, 308, 3, 183, 91, 0, 308, 309, 3, 153,
		76, 0, 309, 310, 3, 157, 78, 0, 310, 311, 3, 161, 80, 0, 311, 42, 1, 0,
		0, 0, 312, 313, 3, 163, 81, 0, 313, 314, 3, 193, 96, 0, 314, 315, 3, 179,
		89, 0, 315, 316, 3, 157, 78, 0, 316, 44, 1, 0, 0, 0, 317, 318, 3, 169,
		84, 0, 318, 319, 3, 179, 89, 0, 319, 320, 3, 191, 95, 0, 320, 46, 1, 0,
		0, 0, 321, 322, 3, 163, 81, 0, 322, 323, 3, 175, 87, 0, 323, 324, 3, 181,
		90, 0, 324, 325, 3, 153, 76, 0, 325, 326, 3, 191, 95, 0, 326, 48, 1, 0,
		0, 0, 327, 328, 3, 189, 94, 0, 328, 329, 3, 191, 95, 0, 329, 330, 3, 187,
		93, 0, 330, 331, 3, 169, 84, 0, 331, 332, 3, 179, 89, 0, 332, 333, 3, 165,
		82, 0, 333, 50, 1, 0, 0, 0, 334, 335, 3, 195, 97, 0, 335, 336, 3, 181,
		90, 0, 336, 337, 3, 169, 84, 0, 337, 338, 3, 159, 79, 0, 338, 52, 1, 0,
		0, 0, 339, 340, 3, 161, 80, 0, 340, 341, 3, 195, 97, 0, 341, 342, 3, 161,
		80, 0, 342, 343, 3, 179, 89, 0, 343, 344, 3, 191, 95, 0, 344, 54, 1, 0,
		0, 0, 345, 346, 3, 177, 88, 0, 346, 347, 3, 161, 80, 0, 347, 348, 3, 191,
		95, 0, 348, 349, 3, 153, 76, 0, 349, 56, 1, 0, 0, 0, 350, 351, 3, 197,
		98, 0, 351, 352, 3, 167, 83, 0, 352, 353, 3, 169, 84, 0, 353, 354, 3, 175,
		87, 0, 354, 355, 3, 161, 80, 0, 355, 58, 1, 0, 0, 0, 356, 357, 3, 157,
		78, 0, 357, 358, 3, 181, 90, 0, 358, 359, 3, 179, 89, 0, 359, 360, 3, 191,
		95, 0, 360, 361, 3, 169, 84, 0, 361, 362, 3, 179, 89, 0, 362, 363, 3, 193,
		96, 0, 363, 364, 3, 161, 80, 0, 364, 60, 1, 0, 0, 0, 365, 366, 3, 155,
		77, 0, 366, 367, 3, 187, 93, 0, 367, 368, 3, 161, 80, 0, 368, 369, 3, 153,
		76, 0, 369, 370, 3, 173, 86, 0, 370, 62, 1, 0, 0, 0, 371, 372, 3, 191,
		95, 0, 372, 373, 3, 161, 80, 0, 373, 374, 3, 189, 94, 0, 374, 375, 3, 191,
		95, 0, 375, 64, 1, 0, 0, 0, 376, 377, 3, 205, 102, 0, 377, 378, 3, 169,
		84, 0, 378, 379, 3, 163, 81, 0, 379, 66, 1, 0, 0, 0, 380, 381, 3, 205,
		102, 0, 381, 382, 3, 161, 80, 0, 382, 383, 3, 175, 87, 0, 383, 384, 3,
		169, 84, 0, 384, 385, 3, 163, 81, 0, 385, 68, 1, 0, 0, 0, 386, 387, 3,
		205, 102, 0, 387, 388, 3, 161, 80, 0, 388, 389, 3, 175, 87, 0, 389, 390,
		3, 189, 94, 0, 390, 391, 3, 161, 80, 0, 391, 70, 1, 0, 0, 0, 392, 393,
		3, 205, 102, 0, 393, 394, 3, 161, 80, 0, 394, 395, 3, 179, 89, 0, 395,
		396, 3, 159, 79, 0, 396, 397, 3, 169, 84, 0, 397, 398, 3, 163, 81, 0, 398,
		72, 1, 0, 0, 0, 399, 400, 5, 40, 0, 0, 400, 74, 1, 0, 0, 0, 401, 402, 5,
		41, 0, 0, 402, 76, 1, 0, 0, 0, 403, 404, 5, 91, 0, 0, 404, 78, 1, 0, 0,
		0, 405, 406, 5, 93, 0, 0, 406, 80, 1, 0, 0, 0, 407, 408, 5, 123, 0, 0,
		408, 82, 1, 0, 0, 0, 409, 410, 5, 125, 0, 0, 410, 84, 1, 0, 0, 0, 411,
		412, 5, 38, 0, 0, 412, 86, 1, 0, 0, 0, 413, 414, 5, 38, 0, 0, 414, 415,
		5, 38, 0, 0, 415, 88, 1, 0, 0, 0, 416, 417, 5, 124, 0, 0, 417, 90, 1, 0,
		0, 0, 418, 419, 5, 124, 0, 0, 419, 420, 5, 124, 0, 0, 420, 92, 1, 0, 0,
		0, 421, 422, 5, 43, 0, 0, 422, 94, 1, 0, 0, 0, 423, 424, 5, 45, 0, 0, 424,
		96, 1, 0, 0, 0, 425, 426, 5, 47, 0, 0, 426, 98, 1, 0, 0, 0, 427, 428, 5,
		42, 0, 0, 428, 100, 1, 0, 0, 0, 429, 430, 5, 126, 0, 0, 430, 102, 1, 0,
		0, 0, 431, 432, 5, 33, 0, 0, 432, 104, 1, 0, 0, 0, 433, 434, 5, 61, 0,
		0, 434, 106, 1, 0, 0, 0, 435, 436, 5, 60, 0, 0, 436, 108, 1, 0, 0, 0, 437,
		438, 5, 62, 0, 0, 438, 110, 1, 0, 0, 0, 439, 440, 5, 43, 0, 0, 440, 441,
		5, 61, 0, 0, 441, 112, 1, 0, 0, 0, 442, 443, 5, 45, 0, 0, 443, 444, 5,
		61, 0, 0, 444, 114, 1, 0, 0, 0, 445, 446, 5, 42, 0, 0, 446, 447, 5, 61,
		0, 0, 447, 116, 1, 0, 0, 0, 448, 449, 5, 47, 0, 0, 449, 450, 5, 61, 0,
		0, 450, 118, 1, 0, 0, 0, 451, 452, 5, 38, 0, 0, 452, 453, 5, 61, 0, 0,
		453, 120, 1, 0, 0, 0, 454, 455, 5, 124, 0, 0, 455, 456, 5, 61, 0, 0, 456,
		122, 1, 0, 0, 0, 457, 458, 5, 46, 0, 0, 458, 124, 1, 0, 0, 0, 459, 460,
		5, 59, 0, 0, 460, 126, 1, 0, 0, 0, 461, 464, 3, 137, 68, 0, 462, 464, 3,
		145, 72, 0, 463, 461, 1, 0, 0, 0, 463, 462, 1, 0, 0, 0, 464, 468, 1, 0,
		0, 0, 465, 467, 3, 139, 69, 0, 466, 465, 1, 0, 0, 0, 467, 470, 1, 0, 0,
		0, 468, 466, 1, 0, 0, 0, 468, 469, 1, 0, 0, 0, 469, 128, 1, 0, 0, 0, 470,
		468, 1, 0, 0, 0, 471, 473, 7, 1, 0, 0, 472, 471, 1, 0, 0, 0, 473, 474,
		1, 0, 0, 0, 474, 472, 1, 0, 0, 0, 474, 475, 1, 0, 0, 0, 475, 476, 1, 0,
		0, 0, 476, 477, 6, 64, 0, 0, 477, 130, 1, 0, 0, 0, 478, 480, 5, 13, 0,
		0, 479, 481, 5, 10, 0, 0, 480, 479, 1, 0, 0, 0, 480, 481, 1, 0, 0, 0, 481,
		484, 1, 0, 0, 0, 482, 484, 5, 10, 0, 0, 483, 478, 1, 0, 0, 0, 483, 482,
		1, 0, 0, 0, 484, 485, 1, 0, 0, 0, 485, 486, 6, 65, 0, 0, 486, 132, 1, 0,
		0, 0, 487, 488, 5, 47, 0, 0, 488, 489, 5, 42, 0, 0, 489, 493, 1, 0, 0,
		0, 490, 492, 9, 0, 0, 0, 491, 490, 1, 0, 0, 0, 492, 495, 1, 0, 0, 0, 493,
		494, 1, 0, 0, 0, 493, 491, 1, 0, 0, 0, 494, 496, 1, 0, 0, 0, 495, 493,
		1, 0, 0, 0, 496, 497, 5, 42, 0, 0, 497, 498, 5, 47, 0, 0, 498, 499, 1,
		0, 0, 0, 499, 500, 6, 66, 0, 0, 500, 134, 1, 0, 0, 0, 501, 502, 5, 47,
		0, 0, 502, 503, 5, 47, 0, 0, 503, 507, 1, 0, 0, 0, 504, 506, 8, 2, 0, 0,
		505, 504, 1, 0, 0, 0, 506, 509, 1, 0, 0, 0, 507, 505, 1, 0, 0, 0, 507,
		508, 1, 0, 0, 0, 508, 510, 1, 0, 0, 0, 509, 507, 1, 0, 0, 0, 510, 511,
		6, 67, 1, 0, 511, 136, 1, 0, 0, 0, 512, 515, 3, 143, 71, 0, 513, 515, 7,
		3, 0, 0, 514, 512, 1, 0, 0, 0, 514, 513, 1, 0, 0, 0, 515, 138, 1, 0, 0,
		0, 516, 520, 3, 137, 68, 0, 517, 520, 3, 141, 70, 0, 518, 520, 3, 145,
		72, 0, 519, 516, 1, 0, 0, 0, 519, 517, 1, 0, 0, 0, 519, 518, 1, 0, 0, 0,
		520, 140, 1, 0, 0, 0, 521, 522, 7, 4, 0, 0, 522, 142, 1, 0, 0, 0, 523,
		524, 7, 5, 0, 0, 524, 144, 1, 0, 0, 0, 525, 526, 7, 6, 0, 0, 526, 146,
		1, 0, 0, 0, 527, 529, 3, 145, 72, 0, 528, 527, 1, 0, 0, 0, 529, 532, 1,
		0, 0, 0, 530, 528, 1, 0, 0, 0, 530, 531, 1, 0, 0, 0, 531, 533, 1, 0, 0,
		0, 532, 530, 1, 0, 0, 0, 533, 535, 5, 46, 0, 0, 534, 536, 3, 145, 72, 0,
		535, 534, 1, 0, 0, 0, 536, 537, 1, 0, 0, 0, 537, 535, 1, 0, 0, 0, 537,
		538, 1, 0, 0, 0, 538, 547, 1, 0, 0, 0, 539, 541, 3, 145, 72, 0, 540, 539,
		1, 0, 0, 0, 541, 542, 1, 0, 0, 0, 542, 540, 1, 0, 0, 0, 542, 543, 1, 0,
		0, 0, 543, 544, 1, 0, 0, 0, 544, 545, 5, 46, 0, 0, 545, 547, 1, 0, 0, 0,
		546, 530, 1, 0, 0, 0, 546, 540, 1, 0, 0, 0, 547, 148, 1, 0, 0, 0, 548,
		550, 3, 145, 72, 0, 549, 548, 1, 0, 0, 0, 550, 551, 1, 0, 0, 0, 551, 549,
		1, 0, 0, 0, 551, 552, 1, 0, 0, 0, 552, 555, 1, 0, 0, 0, 553, 555, 3, 147,
		73, 0, 554, 549, 1, 0, 0, 0, 554, 553, 1, 0, 0, 0, 555, 556, 1, 0, 0, 0,
		556, 557, 3, 151, 75, 0, 557, 150, 1, 0, 0, 0, 558, 560, 7, 7, 0, 0, 559,
		561, 7, 8, 0, 0, 560, 559, 1, 0, 0, 0, 560, 561, 1, 0, 0, 0, 561, 563,
		1, 0, 0, 0, 562, 564, 3, 145, 72, 0, 563, 562, 1, 0, 0, 0, 564, 565, 1,
		0, 0, 0, 565, 563, 1, 0, 0, 0, 565, 566, 1, 0, 0, 0, 566, 152, 1, 0, 0,
		0, 567, 568, 7, 9, 0, 0, 568, 154, 1, 0, 0, 0, 569, 570, 7, 10, 0, 0, 570,
		156, 1, 0, 0, 0, 571, 572, 7, 11, 0, 0, 572, 158, 1, 0, 0, 0, 573, 574,
		7, 12, 0, 0, 574, 160, 1, 0, 0, 0, 575, 576, 7, 7, 0, 0, 576, 162, 1, 0,
		0, 0, 577, 578, 7, 13, 0, 0, 578, 164, 1, 0, 0, 0, 579, 580, 7, 14, 0,
		0, 580, 166, 1, 0, 0, 0, 581, 582, 7, 15, 0, 0, 582, 168, 1, 0, 0, 0, 583,
		584, 7, 16, 0, 0, 584, 170, 1, 0, 0, 0, 585, 586, 7, 17, 0, 0, 586, 172,
		1, 0, 0, 0, 587, 588, 7, 18, 0, 0, 588, 174, 1, 0, 0, 0, 589, 590, 7, 19,
		0, 0, 590, 176, 1, 0, 0, 0, 591, 592, 7, 20, 0, 0, 592, 178, 1, 0, 0, 0,
		593, 594, 7, 21, 0, 0, 594, 180, 1, 0, 0, 0, 595, 596, 7, 22, 0, 0, 596,
		182, 1, 0, 0, 0, 597, 598, 7, 23, 0, 0, 598, 184, 1, 0, 0, 0, 599, 600,
		7, 24, 0, 0, 600, 186, 1, 0, 0, 0, 601, 602, 7, 25, 0, 0, 602, 188, 1,
		0, 0, 0, 603, 604, 7, 26, 0, 0, 604, 190, 1, 0, 0, 0, 605, 606, 7, 27,
		0, 0, 606, 192, 1, 0, 0, 0, 607, 608, 7, 28, 0, 0, 608, 194, 1, 0, 0, 0,
		609, 610, 7, 29, 0, 0, 610, 196, 1, 0, 0, 0, 611, 612, 7, 30, 0, 0, 612,
		198, 1, 0, 0, 0, 613, 614, 7, 31, 0, 0, 614, 200, 1, 0, 0, 0, 615, 616,
		7, 32, 0, 0, 616, 202, 1, 0, 0, 0, 617, 618, 7, 33, 0, 0, 618, 204, 1,
		0, 0, 0, 619, 620, 5, 35, 0, 0, 620, 206, 1, 0, 0, 0, 21, 0, 232, 236,
		242, 463, 468, 474, 480, 483, 493, 507, 514, 519, 530, 537, 542, 546, 551,
		554, 560, 565, 2, 6, 0, 0, 0, 2, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DaedalusLexerInit initializes any static state used to implement DaedalusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDaedalusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DaedalusLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.once.Do(daedaluslexerLexerInit)
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	DaedalusLexerInit()
	l := new(DaedalusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &daedaluslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0           = 1
	DaedalusLexerT__1           = 2
	DaedalusLexerT__2           = 3
	DaedalusLexerT__3           = 4
	DaedalusLexerT__4           = 5
	DaedalusLexerT__5           = 6
	DaedalusLexerT__6           = 7
	DaedalusLexerT__7           = 8
	DaedalusLexerIntegerLiteral = 9
	DaedalusLexerFloatLiteral   = 10
	DaedalusLexerStringLiteral  = 11
	DaedalusLexerVar            = 12
	DaedalusLexerConst          = 13
	DaedalusLexerClass          = 14
	DaedalusLexerPrototype      = 15
	DaedalusLexerInstance       = 16
	DaedalusLexerIf             = 17
	DaedalusLexerElse           = 18
	DaedalusLexerNull           = 19
	DaedalusLexerReturn         = 20
	DaedalusLexerNamespace      = 21
	DaedalusLexerFunc           = 22
	DaedalusLexerInt            = 23
	DaedalusLexerFloat          = 24
	DaedalusLexerStringKeyword  = 25
	DaedalusLexerVoid           = 26
	DaedalusLexerEvent          = 27
	DaedalusLexerMeta           = 28
	DaedalusLexerWhile          = 29
	DaedalusLexerContinue       = 30
	DaedalusLexerBreak          = 31
	DaedalusLexerTest           = 32
	DaedalusLexerMif            = 33
	DaedalusLexerMelif          = 34
	DaedalusLexerMelse          = 35
	DaedalusLexerMendif         = 36
	DaedalusLexerLeftParen      = 37
	DaedalusLexerRightParen     = 38
	DaedalusLexerLeftBracket    = 39
	DaedalusLexerRightBracket   = 40
	DaedalusLexerLeftBrace      = 41
	DaedalusLexerRightBrace     = 42
	DaedalusLexerBitAnd         = 43
	DaedalusLexerAnd            = 44
	DaedalusLexerBitOr          = 45
	DaedalusLexerOr             = 46
	DaedalusLexerPlus           = 47
	DaedalusLexerMinus          = 48
	DaedalusLexerDiv            = 49
	DaedalusLexerStar           = 50
	DaedalusLexerTilde          = 51
	DaedalusLexerNot            = 52
	DaedalusLexerAssign         = 53
	DaedalusLexerLess           = 54
	DaedalusLexerGreater        = 55
	DaedalusLexerPlusAssign     = 56
	DaedalusLexerMinusAssign    = 57
	DaedalusLexerStarAssign     = 58
	DaedalusLexerDivAssign      = 59
	DaedalusLexerAndAssign      = 60
	DaedalusLexerOrAssign       = 61
	DaedalusLexerDot            = 62
	DaedalusLexerSemi           = 63
	DaedalusLexerIdentifier     = 64
	DaedalusLexerWhitespace     = 65
	DaedalusLexerNewline        = 66
	DaedalusLexerBlockComment   = 67
	DaedalusLexerLineComment    = 68
)

const (
	// Channel that contains comments
	COMMENTS int = 2
)
