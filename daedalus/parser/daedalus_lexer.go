// Code generated from Daedalus.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var daedaluslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func daedaluslexerLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "','", "'{'", "'}'", "'('", "')'", "'['", "']'", "'='", "'.'",
		"'+='", "'-='", "'*='", "'/='", "'+'", "'-'", "'<<'", "'>>'", "'<'",
		"'>'", "'<='", "'>='", "'=='", "'!='", "'!'", "'~'", "'*'", "'/'", "'%'",
		"'&'", "'|'", "'&&'", "'||'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"Const", "Var", "If", "Int", "Else", "Func", "StringKeyword", "Class",
		"Void", "Return", "Float", "Prototype", "Instance", "Null", "NoFunc",
		"Identifier", "IntegerLiteral", "FloatLiteral", "StringLiteral", "Whitespace",
		"TooManyCommentlines", "SummaryComment", "Newline", "BlockComment",
		"LineComment",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"Const", "Var", "If", "Int", "Else", "Func", "StringKeyword", "Class",
		"Void", "Return", "Float", "Prototype", "Instance", "Null", "NoFunc",
		"Identifier", "IntegerLiteral", "FloatLiteral", "StringLiteral", "Whitespace",
		"TooManyCommentlines", "SummaryComment", "Newline", "BlockComment",
		"LineComment", "IdStart", "IdStartNumeric", "IdContinue", "IdSpecial",
		"GermanCharacter", "Digit", "PointFloat", "ExponentFloat", "Exponent",
		"DocCommentStart",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 58, 458, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1,
		11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22,
		1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1,
		39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40,
		1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1,
		42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44,
		1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1,
		45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 3, 48, 307,
		8, 48, 1, 48, 5, 48, 310, 8, 48, 10, 48, 12, 48, 313, 9, 48, 1, 49, 4,
		49, 316, 8, 49, 11, 49, 12, 49, 317, 1, 50, 1, 50, 3, 50, 322, 8, 50, 1,
		51, 1, 51, 1, 51, 1, 51, 1, 51, 3, 51, 329, 8, 51, 5, 51, 331, 8, 51, 10,
		51, 12, 51, 334, 9, 51, 1, 51, 1, 51, 1, 52, 4, 52, 339, 8, 52, 11, 52,
		12, 52, 340, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 5,
		53, 351, 8, 53, 10, 53, 12, 53, 354, 9, 53, 1, 53, 1, 53, 1, 54, 1, 54,
		4, 54, 360, 8, 54, 11, 54, 12, 54, 361, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		56, 1, 56, 1, 56, 1, 56, 5, 56, 372, 8, 56, 10, 56, 12, 56, 375, 9, 56,
		1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 386,
		8, 57, 10, 57, 12, 57, 389, 9, 57, 1, 57, 1, 57, 1, 58, 1, 58, 3, 58, 395,
		8, 58, 1, 59, 4, 59, 398, 8, 59, 11, 59, 12, 59, 399, 1, 59, 1, 59, 1,
		60, 1, 60, 1, 60, 3, 60, 407, 8, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63,
		1, 63, 1, 64, 5, 64, 416, 8, 64, 10, 64, 12, 64, 419, 9, 64, 1, 64, 1,
		64, 4, 64, 423, 8, 64, 11, 64, 12, 64, 424, 1, 64, 4, 64, 428, 8, 64, 11,
		64, 12, 64, 429, 1, 64, 1, 64, 3, 64, 434, 8, 64, 1, 65, 4, 65, 437, 8,
		65, 11, 65, 12, 65, 438, 1, 65, 3, 65, 442, 8, 65, 1, 65, 1, 65, 1, 66,
		1, 66, 3, 66, 448, 8, 66, 1, 66, 4, 66, 451, 8, 66, 11, 66, 12, 66, 452,
		1, 67, 1, 67, 1, 67, 1, 67, 1, 373, 0, 68, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5,
		11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29,
		15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47,
		24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65,
		33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83,
		42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101,
		51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117,
		0, 119, 0, 121, 0, 123, 0, 125, 0, 127, 0, 129, 0, 131, 0, 133, 0, 135,
		0, 1, 0, 25, 2, 0, 67, 67, 99, 99, 2, 0, 79, 79, 111, 111, 2, 0, 78, 78,
		110, 110, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 86, 86,
		118, 118, 2, 0, 65, 65, 97, 97, 2, 0, 82, 82, 114, 114, 2, 0, 73, 73, 105,
		105, 2, 0, 70, 70, 102, 102, 2, 0, 69, 69, 101, 101, 2, 0, 76, 76, 108,
		108, 2, 0, 85, 85, 117, 117, 2, 0, 71, 71, 103, 103, 2, 0, 68, 68, 100,
		100, 2, 0, 80, 80, 112, 112, 2, 0, 89, 89, 121, 121, 4, 0, 10, 10, 13,
		13, 34, 34, 92, 92, 2, 0, 9, 9, 32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 65,
		90, 95, 95, 97, 122, 2, 0, 64, 64, 94, 94, 7, 0, 196, 196, 214, 214, 220,
		220, 223, 223, 228, 228, 246, 246, 252, 252, 1, 0, 48, 57, 2, 0, 43, 43,
		45, 45, 471, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7,
		1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0,
		15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0,
		0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
		0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
		0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0,
		61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0,
		0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0,
		0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0,
		0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1,
		0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99,
		1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0,
		0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1,
		0, 0, 0, 0, 115, 1, 0, 0, 0, 1, 137, 1, 0, 0, 0, 3, 139, 1, 0, 0, 0, 5,
		141, 1, 0, 0, 0, 7, 143, 1, 0, 0, 0, 9, 145, 1, 0, 0, 0, 11, 147, 1, 0,
		0, 0, 13, 149, 1, 0, 0, 0, 15, 151, 1, 0, 0, 0, 17, 153, 1, 0, 0, 0, 19,
		155, 1, 0, 0, 0, 21, 157, 1, 0, 0, 0, 23, 160, 1, 0, 0, 0, 25, 163, 1,
		0, 0, 0, 27, 166, 1, 0, 0, 0, 29, 169, 1, 0, 0, 0, 31, 171, 1, 0, 0, 0,
		33, 173, 1, 0, 0, 0, 35, 176, 1, 0, 0, 0, 37, 179, 1, 0, 0, 0, 39, 181,
		1, 0, 0, 0, 41, 183, 1, 0, 0, 0, 43, 186, 1, 0, 0, 0, 45, 189, 1, 0, 0,
		0, 47, 192, 1, 0, 0, 0, 49, 195, 1, 0, 0, 0, 51, 197, 1, 0, 0, 0, 53, 199,
		1, 0, 0, 0, 55, 201, 1, 0, 0, 0, 57, 203, 1, 0, 0, 0, 59, 205, 1, 0, 0,
		0, 61, 207, 1, 0, 0, 0, 63, 209, 1, 0, 0, 0, 65, 212, 1, 0, 0, 0, 67, 215,
		1, 0, 0, 0, 69, 221, 1, 0, 0, 0, 71, 225, 1, 0, 0, 0, 73, 228, 1, 0, 0,
		0, 75, 232, 1, 0, 0, 0, 77, 237, 1, 0, 0, 0, 79, 242, 1, 0, 0, 0, 81, 249,
		1, 0, 0, 0, 83, 255, 1, 0, 0, 0, 85, 260, 1, 0, 0, 0, 87, 267, 1, 0, 0,
		0, 89, 273, 1, 0, 0, 0, 91, 283, 1, 0, 0, 0, 93, 292, 1, 0, 0, 0, 95, 297,
		1, 0, 0, 0, 97, 306, 1, 0, 0, 0, 99, 315, 1, 0, 0, 0, 101, 321, 1, 0, 0,
		0, 103, 323, 1, 0, 0, 0, 105, 338, 1, 0, 0, 0, 107, 344, 1, 0, 0, 0, 109,
		357, 1, 0, 0, 0, 111, 363, 1, 0, 0, 0, 113, 367, 1, 0, 0, 0, 115, 381,
		1, 0, 0, 0, 117, 394, 1, 0, 0, 0, 119, 397, 1, 0, 0, 0, 121, 406, 1, 0,
		0, 0, 123, 408, 1, 0, 0, 0, 125, 410, 1, 0, 0, 0, 127, 412, 1, 0, 0, 0,
		129, 433, 1, 0, 0, 0, 131, 441, 1, 0, 0, 0, 133, 445, 1, 0, 0, 0, 135,
		454, 1, 0, 0, 0, 137, 138, 5, 59, 0, 0, 138, 2, 1, 0, 0, 0, 139, 140, 5,
		44, 0, 0, 140, 4, 1, 0, 0, 0, 141, 142, 5, 123, 0, 0, 142, 6, 1, 0, 0,
		0, 143, 144, 5, 125, 0, 0, 144, 8, 1, 0, 0, 0, 145, 146, 5, 40, 0, 0, 146,
		10, 1, 0, 0, 0, 147, 148, 5, 41, 0, 0, 148, 12, 1, 0, 0, 0, 149, 150, 5,
		91, 0, 0, 150, 14, 1, 0, 0, 0, 151, 152, 5, 93, 0, 0, 152, 16, 1, 0, 0,
		0, 153, 154, 5, 61, 0, 0, 154, 18, 1, 0, 0, 0, 155, 156, 5, 46, 0, 0, 156,
		20, 1, 0, 0, 0, 157, 158, 5, 43, 0, 0, 158, 159, 5, 61, 0, 0, 159, 22,
		1, 0, 0, 0, 160, 161, 5, 45, 0, 0, 161, 162, 5, 61, 0, 0, 162, 24, 1, 0,
		0, 0, 163, 164, 5, 42, 0, 0, 164, 165, 5, 61, 0, 0, 165, 26, 1, 0, 0, 0,
		166, 167, 5, 47, 0, 0, 167, 168, 5, 61, 0, 0, 168, 28, 1, 0, 0, 0, 169,
		170, 5, 43, 0, 0, 170, 30, 1, 0, 0, 0, 171, 172, 5, 45, 0, 0, 172, 32,
		1, 0, 0, 0, 173, 174, 5, 60, 0, 0, 174, 175, 5, 60, 0, 0, 175, 34, 1, 0,
		0, 0, 176, 177, 5, 62, 0, 0, 177, 178, 5, 62, 0, 0, 178, 36, 1, 0, 0, 0,
		179, 180, 5, 60, 0, 0, 180, 38, 1, 0, 0, 0, 181, 182, 5, 62, 0, 0, 182,
		40, 1, 0, 0, 0, 183, 184, 5, 60, 0, 0, 184, 185, 5, 61, 0, 0, 185, 42,
		1, 0, 0, 0, 186, 187, 5, 62, 0, 0, 187, 188, 5, 61, 0, 0, 188, 44, 1, 0,
		0, 0, 189, 190, 5, 61, 0, 0, 190, 191, 5, 61, 0, 0, 191, 46, 1, 0, 0, 0,
		192, 193, 5, 33, 0, 0, 193, 194, 5, 61, 0, 0, 194, 48, 1, 0, 0, 0, 195,
		196, 5, 33, 0, 0, 196, 50, 1, 0, 0, 0, 197, 198, 5, 126, 0, 0, 198, 52,
		1, 0, 0, 0, 199, 200, 5, 42, 0, 0, 200, 54, 1, 0, 0, 0, 201, 202, 5, 47,
		0, 0, 202, 56, 1, 0, 0, 0, 203, 204, 5, 37, 0, 0, 204, 58, 1, 0, 0, 0,
		205, 206, 5, 38, 0, 0, 206, 60, 1, 0, 0, 0, 207, 208, 5, 124, 0, 0, 208,
		62, 1, 0, 0, 0, 209, 210, 5, 38, 0, 0, 210, 211, 5, 38, 0, 0, 211, 64,
		1, 0, 0, 0, 212, 213, 5, 124, 0, 0, 213, 214, 5, 124, 0, 0, 214, 66, 1,
		0, 0, 0, 215, 216, 7, 0, 0, 0, 216, 217, 7, 1, 0, 0, 217, 218, 7, 2, 0,
		0, 218, 219, 7, 3, 0, 0, 219, 220, 7, 4, 0, 0, 220, 68, 1, 0, 0, 0, 221,
		222, 7, 5, 0, 0, 222, 223, 7, 6, 0, 0, 223, 224, 7, 7, 0, 0, 224, 70, 1,
		0, 0, 0, 225, 226, 7, 8, 0, 0, 226, 227, 7, 9, 0, 0, 227, 72, 1, 0, 0,
		0, 228, 229, 7, 8, 0, 0, 229, 230, 7, 2, 0, 0, 230, 231, 7, 4, 0, 0, 231,
		74, 1, 0, 0, 0, 232, 233, 7, 10, 0, 0, 233, 234, 7, 11, 0, 0, 234, 235,
		7, 3, 0, 0, 235, 236, 7, 10, 0, 0, 236, 76, 1, 0, 0, 0, 237, 238, 7, 9,
		0, 0, 238, 239, 7, 12, 0, 0, 239, 240, 7, 2, 0, 0, 240, 241, 7, 0, 0, 0,
		241, 78, 1, 0, 0, 0, 242, 243, 7, 3, 0, 0, 243, 244, 7, 4, 0, 0, 244, 245,
		7, 7, 0, 0, 245, 246, 7, 8, 0, 0, 246, 247, 7, 2, 0, 0, 247, 248, 7, 13,
		0, 0, 248, 80, 1, 0, 0, 0, 249, 250, 7, 0, 0, 0, 250, 251, 7, 11, 0, 0,
		251, 252, 7, 6, 0, 0, 252, 253, 7, 3, 0, 0, 253, 254, 7, 3, 0, 0, 254,
		82, 1, 0, 0, 0, 255, 256, 7, 5, 0, 0, 256, 257, 7, 1, 0, 0, 257, 258, 7,
		8, 0, 0, 258, 259, 7, 14, 0, 0, 259, 84, 1, 0, 0, 0, 260, 261, 7, 7, 0,
		0, 261, 262, 7, 10, 0, 0, 262, 263, 7, 4, 0, 0, 263, 264, 7, 12, 0, 0,
		264, 265, 7, 7, 0, 0, 265, 266, 7, 2, 0, 0, 266, 86, 1, 0, 0, 0, 267, 268,
		7, 9, 0, 0, 268, 269, 7, 11, 0, 0, 269, 270, 7, 1, 0, 0, 270, 271, 7, 6,
		0, 0, 271, 272, 7, 4, 0, 0, 272, 88, 1, 0, 0, 0, 273, 274, 7, 15, 0, 0,
		274, 275, 7, 7, 0, 0, 275, 276, 7, 1, 0, 0, 276, 277, 7, 4, 0, 0, 277,
		278, 7, 1, 0, 0, 278, 279, 7, 4, 0, 0, 279, 280, 7, 16, 0, 0, 280, 281,
		7, 15, 0, 0, 281, 282, 7, 10, 0, 0, 282, 90, 1, 0, 0, 0, 283, 284, 7, 8,
		0, 0, 284, 285, 7, 2, 0, 0, 285, 286, 7, 3, 0, 0, 286, 287, 7, 4, 0, 0,
		287, 288, 7, 6, 0, 0, 288, 289, 7, 2, 0, 0, 289, 290, 7, 0, 0, 0, 290,
		291, 7, 10, 0, 0, 291, 92, 1, 0, 0, 0, 292, 293, 7, 2, 0, 0, 293, 294,
		7, 12, 0, 0, 294, 295, 7, 11, 0, 0, 295, 296, 7, 11, 0, 0, 296, 94, 1,
		0, 0, 0, 297, 298, 7, 2, 0, 0, 298, 299, 7, 1, 0, 0, 299, 300, 7, 9, 0,
		0, 300, 301, 7, 12, 0, 0, 301, 302, 7, 2, 0, 0, 302, 303, 7, 0, 0, 0, 303,
		96, 1, 0, 0, 0, 304, 307, 3, 117, 58, 0, 305, 307, 3, 119, 59, 0, 306,
		304, 1, 0, 0, 0, 306, 305, 1, 0, 0, 0, 307, 311, 1, 0, 0, 0, 308, 310,
		3, 121, 60, 0, 309, 308, 1, 0, 0, 0, 310, 313, 1, 0, 0, 0, 311, 309, 1,
		0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 98, 1, 0, 0, 0, 313, 311, 1, 0, 0,
		0, 314, 316, 3, 127, 63, 0, 315, 314, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0,
		317, 315, 1, 0, 0, 0, 317, 318, 1, 0, 0, 0, 318, 100, 1, 0, 0, 0, 319,
		322, 3, 129, 64, 0, 320, 322, 3, 131, 65, 0, 321, 319, 1, 0, 0, 0, 321,
		320, 1, 0, 0, 0, 322, 102, 1, 0, 0, 0, 323, 332, 5, 34, 0, 0, 324, 331,
		8, 17, 0, 0, 325, 328, 5, 92, 0, 0, 326, 329, 9, 0, 0, 0, 327, 329, 5,
		0, 0, 1, 328, 326, 1, 0, 0, 0, 328, 327, 1, 0, 0, 0, 329, 331, 1, 0, 0,
		0, 330, 324, 1, 0, 0, 0, 330, 325, 1, 0, 0, 0, 331, 334, 1, 0, 0, 0, 332,
		330, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 335, 1, 0, 0, 0, 334, 332,
		1, 0, 0, 0, 335, 336, 5, 34, 0, 0, 336, 104, 1, 0, 0, 0, 337, 339, 7, 18,
		0, 0, 338, 337, 1, 0, 0, 0, 339, 340, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0,
		340, 341, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 343, 6, 52, 0, 0, 343,
		106, 1, 0, 0, 0, 344, 345, 5, 47, 0, 0, 345, 346, 5, 47, 0, 0, 346, 347,
		5, 47, 0, 0, 347, 348, 5, 47, 0, 0, 348, 352, 1, 0, 0, 0, 349, 351, 8,
		19, 0, 0, 350, 349, 1, 0, 0, 0, 351, 354, 1, 0, 0, 0, 352, 350, 1, 0, 0,
		0, 352, 353, 1, 0, 0, 0, 353, 355, 1, 0, 0, 0, 354, 352, 1, 0, 0, 0, 355,
		356, 6, 53, 0, 0, 356, 108, 1, 0, 0, 0, 357, 359, 3, 135, 67, 0, 358, 360,
		8, 19, 0, 0, 359, 358, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 359, 1, 0,
		0, 0, 361, 362, 1, 0, 0, 0, 362, 110, 1, 0, 0, 0, 363, 364, 7, 19, 0, 0,
		364, 365, 1, 0, 0, 0, 365, 366, 6, 55, 0, 0, 366, 112, 1, 0, 0, 0, 367,
		368, 5, 47, 0, 0, 368, 369, 5, 42, 0, 0, 369, 373, 1, 0, 0, 0, 370, 372,
		9, 0, 0, 0, 371, 370, 1, 0, 0, 0, 372, 375, 1, 0, 0, 0, 373, 374, 1, 0,
		0, 0, 373, 371, 1, 0, 0, 0, 374, 376, 1, 0, 0, 0, 375, 373, 1, 0, 0, 0,
		376, 377, 5, 42, 0, 0, 377, 378, 5, 47, 0, 0, 378, 379, 1, 0, 0, 0, 379,
		380, 6, 56, 0, 0, 380, 114, 1, 0, 0, 0, 381, 382, 5, 47, 0, 0, 382, 383,
		5, 47, 0, 0, 383, 387, 1, 0, 0, 0, 384, 386, 8, 19, 0, 0, 385, 384, 1,
		0, 0, 0, 386, 389, 1, 0, 0, 0, 387, 385, 1, 0, 0, 0, 387, 388, 1, 0, 0,
		0, 388, 390, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 390, 391, 6, 57, 1, 0, 391,
		116, 1, 0, 0, 0, 392, 395, 3, 125, 62, 0, 393, 395, 7, 20, 0, 0, 394, 392,
		1, 0, 0, 0, 394, 393, 1, 0, 0, 0, 395, 118, 1, 0, 0, 0, 396, 398, 3, 127,
		63, 0, 397, 396, 1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399, 397, 1, 0, 0, 0,
		399, 400, 1, 0, 0, 0, 400, 401, 1, 0, 0, 0, 401, 402, 3, 117, 58, 0, 402,
		120, 1, 0, 0, 0, 403, 407, 3, 117, 58, 0, 404, 407, 3, 123, 61, 0, 405,
		407, 3, 127, 63, 0, 406, 403, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 406, 405,
		1, 0, 0, 0, 407, 122, 1, 0, 0, 0, 408, 409, 7, 21, 0, 0, 409, 124, 1, 0,
		0, 0, 410, 411, 7, 22, 0, 0, 411, 126, 1, 0, 0, 0, 412, 413, 7, 23, 0,
		0, 413, 128, 1, 0, 0, 0, 414, 416, 3, 127, 63, 0, 415, 414, 1, 0, 0, 0,
		416, 419, 1, 0, 0, 0, 417, 415, 1, 0, 0, 0, 417, 418, 1, 0, 0, 0, 418,
		420, 1, 0, 0, 0, 419, 417, 1, 0, 0, 0, 420, 422, 5, 46, 0, 0, 421, 423,
		3, 127, 63, 0, 422, 421, 1, 0, 0, 0, 423, 424, 1, 0, 0, 0, 424, 422, 1,
		0, 0, 0, 424, 425, 1, 0, 0, 0, 425, 434, 1, 0, 0, 0, 426, 428, 3, 127,
		63, 0, 427, 426, 1, 0, 0, 0, 428, 429, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0,
		429, 430, 1, 0, 0, 0, 430, 431, 1, 0, 0, 0, 431, 432, 5, 46, 0, 0, 432,
		434, 1, 0, 0, 0, 433, 417, 1, 0, 0, 0, 433, 427, 1, 0, 0, 0, 434, 130,
		1, 0, 0, 0, 435, 437, 3, 127, 63, 0, 436, 435, 1, 0, 0, 0, 437, 438, 1,
		0, 0, 0, 438, 436, 1, 0, 0, 0, 438, 439, 1, 0, 0, 0, 439, 442, 1, 0, 0,
		0, 440, 442, 3, 129, 64, 0, 441, 436, 1, 0, 0, 0, 441, 440, 1, 0, 0, 0,
		442, 443, 1, 0, 0, 0, 443, 444, 3, 133, 66, 0, 444, 132, 1, 0, 0, 0, 445,
		447, 7, 10, 0, 0, 446, 448, 7, 24, 0, 0, 447, 446, 1, 0, 0, 0, 447, 448,
		1, 0, 0, 0, 448, 450, 1, 0, 0, 0, 449, 451, 3, 127, 63, 0, 450, 449, 1,
		0, 0, 0, 451, 452, 1, 0, 0, 0, 452, 450, 1, 0, 0, 0, 452, 453, 1, 0, 0,
		0, 453, 134, 1, 0, 0, 0, 454, 455, 5, 47, 0, 0, 455, 456, 5, 47, 0, 0,
		456, 457, 5, 47, 0, 0, 457, 136, 1, 0, 0, 0, 24, 0, 306, 311, 317, 321,
		328, 330, 332, 340, 352, 361, 373, 387, 394, 399, 406, 417, 424, 429, 433,
		438, 441, 447, 452, 2, 6, 0, 0, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DaedalusLexerInit initializes any static state used to implement DaedalusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDaedalusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DaedalusLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.once.Do(daedaluslexerLexerInit)
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	DaedalusLexerInit()
	l := new(DaedalusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &daedaluslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0                = 1
	DaedalusLexerT__1                = 2
	DaedalusLexerT__2                = 3
	DaedalusLexerT__3                = 4
	DaedalusLexerT__4                = 5
	DaedalusLexerT__5                = 6
	DaedalusLexerT__6                = 7
	DaedalusLexerT__7                = 8
	DaedalusLexerT__8                = 9
	DaedalusLexerT__9                = 10
	DaedalusLexerT__10               = 11
	DaedalusLexerT__11               = 12
	DaedalusLexerT__12               = 13
	DaedalusLexerT__13               = 14
	DaedalusLexerT__14               = 15
	DaedalusLexerT__15               = 16
	DaedalusLexerT__16               = 17
	DaedalusLexerT__17               = 18
	DaedalusLexerT__18               = 19
	DaedalusLexerT__19               = 20
	DaedalusLexerT__20               = 21
	DaedalusLexerT__21               = 22
	DaedalusLexerT__22               = 23
	DaedalusLexerT__23               = 24
	DaedalusLexerT__24               = 25
	DaedalusLexerT__25               = 26
	DaedalusLexerT__26               = 27
	DaedalusLexerT__27               = 28
	DaedalusLexerT__28               = 29
	DaedalusLexerT__29               = 30
	DaedalusLexerT__30               = 31
	DaedalusLexerT__31               = 32
	DaedalusLexerT__32               = 33
	DaedalusLexerConst               = 34
	DaedalusLexerVar                 = 35
	DaedalusLexerIf                  = 36
	DaedalusLexerInt                 = 37
	DaedalusLexerElse                = 38
	DaedalusLexerFunc                = 39
	DaedalusLexerStringKeyword       = 40
	DaedalusLexerClass               = 41
	DaedalusLexerVoid                = 42
	DaedalusLexerReturn              = 43
	DaedalusLexerFloat               = 44
	DaedalusLexerPrototype           = 45
	DaedalusLexerInstance            = 46
	DaedalusLexerNull                = 47
	DaedalusLexerNoFunc              = 48
	DaedalusLexerIdentifier          = 49
	DaedalusLexerIntegerLiteral      = 50
	DaedalusLexerFloatLiteral        = 51
	DaedalusLexerStringLiteral       = 52
	DaedalusLexerWhitespace          = 53
	DaedalusLexerTooManyCommentlines = 54
	DaedalusLexerSummaryComment      = 55
	DaedalusLexerNewline             = 56
	DaedalusLexerBlockComment        = 57
	DaedalusLexerLineComment         = 58
)
