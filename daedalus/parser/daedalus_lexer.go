// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var daedaluslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func daedaluslexerLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "','", "'<<'", "'>>'", "'<='", "'>='", "'=='", "'!='", "'%'", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "'('", "')'", "'['", "']'", "'{'", "'}'", "'&'", "'&&'",
		"'|'", "'||'", "'+'", "'-'", "'/'", "'*'", "'~'", "'!'", "'='", "'<'",
		"'>'", "'+='", "'-='", "'*='", "'/='", "'&='", "'|='", "'.'", "';'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "IntegerLiteral", "FloatLiteral",
		"StringLiteral", "Const", "Var", "If", "Int", "Else", "Func", "StringKeyword",
		"Class", "Void", "Return", "Float", "Prototype", "Instance", "Namespace",
		"Null", "Meta", "MacroIF", "MacroELSEIF", "MacroELSE", "LeftParen",
		"RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace",
		"BitAnd", "And", "BitOr", "Or", "Plus", "Minus", "Div", "Star", "Tilde",
		"Not", "Assign", "Less", "Greater", "PlusAssign", "MinusAssign", "StarAssign",
		"DivAssign", "AndAssign", "OrAssign", "Dot", "Semi", "Identifier", "Whitespace",
		"Newline", "BlockComment", "LineComment",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "IntegerLiteral",
		"FloatLiteral", "StringLiteral", "Const", "Var", "If", "Int", "Else",
		"Func", "StringKeyword", "Class", "Void", "Return", "Float", "Prototype",
		"Instance", "Namespace", "Null", "Meta", "MacroIF", "MacroELSEIF", "MacroELSE",
		"LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace",
		"RightBrace", "BitAnd", "And", "BitOr", "Or", "Plus", "Minus", "Div",
		"Star", "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", "MinusAssign",
		"StarAssign", "DivAssign", "AndAssign", "OrAssign", "Dot", "Semi", "Identifier",
		"Whitespace", "Newline", "BlockComment", "LineComment", "NonDigit",
		"IdContinue", "IdSpecial", "GermanCharacter", "Digit", "PointFloat",
		"ExponentFloat", "Exponent", "A", "B", "C", "D", "E", "F", "G", "H",
		"I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V",
		"W", "X", "Y", "Z", "MACRO",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 62, 572, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,
		2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1,
		6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 4, 8, 219, 8, 8, 11, 8, 12, 8, 220, 1,
		9, 1, 9, 3, 9, 225, 8, 9, 1, 10, 1, 10, 5, 10, 229, 8, 10, 10, 10, 12,
		10, 232, 9, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1,
		33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37,
		1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1,
		42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1,
		51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55,
		1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 3, 57, 415, 8, 57, 1, 57, 5, 57, 418,
		8, 57, 10, 57, 12, 57, 421, 9, 57, 1, 58, 4, 58, 424, 8, 58, 11, 58, 12,
		58, 425, 1, 58, 1, 58, 1, 59, 1, 59, 3, 59, 432, 8, 59, 1, 59, 3, 59, 435,
		8, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 5, 60, 443, 8, 60, 10,
		60, 12, 60, 446, 9, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61,
		1, 61, 1, 61, 5, 61, 457, 8, 61, 10, 61, 12, 61, 460, 9, 61, 1, 61, 1,
		61, 1, 62, 1, 62, 3, 62, 466, 8, 62, 1, 63, 1, 63, 1, 63, 3, 63, 471, 8,
		63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 5, 67, 480, 8, 67,
		10, 67, 12, 67, 483, 9, 67, 1, 67, 1, 67, 4, 67, 487, 8, 67, 11, 67, 12,
		67, 488, 1, 67, 4, 67, 492, 8, 67, 11, 67, 12, 67, 493, 1, 67, 1, 67, 3,
		67, 498, 8, 67, 1, 68, 4, 68, 501, 8, 68, 11, 68, 12, 68, 502, 1, 68, 3,
		68, 506, 8, 68, 1, 68, 1, 68, 1, 69, 1, 69, 3, 69, 512, 8, 69, 1, 69, 4,
		69, 515, 8, 69, 11, 69, 12, 69, 516, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72,
		1, 72, 1, 73, 1, 73, 1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 1, 77, 1,
		77, 1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1, 82, 1, 82,
		1, 83, 1, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87, 1, 87, 1,
		88, 1, 88, 1, 89, 1, 89, 1, 90, 1, 90, 1, 91, 1, 91, 1, 92, 1, 92, 1, 93,
		1, 93, 1, 94, 1, 94, 1, 95, 1, 95, 1, 96, 1, 96, 1, 444, 0, 97, 1, 1, 3,
		2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12,
		25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21,
		43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30,
		61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39,
		79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48,
		97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113,
		57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 0, 127, 0, 129, 0,
		131, 0, 133, 0, 135, 0, 137, 0, 139, 0, 141, 0, 143, 0, 145, 0, 147, 0,
		149, 0, 151, 0, 153, 0, 155, 0, 157, 0, 159, 0, 161, 0, 163, 0, 165, 0,
		167, 0, 169, 0, 171, 0, 173, 0, 175, 0, 177, 0, 179, 0, 181, 0, 183, 0,
		185, 0, 187, 0, 189, 0, 191, 0, 193, 0, 1, 0, 34, 3, 0, 10, 10, 13, 13,
		34, 34, 2, 0, 9, 9, 32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95,
		97, 122, 2, 0, 64, 64, 94, 94, 7, 0, 196, 196, 214, 214, 220, 220, 223,
		223, 228, 228, 246, 246, 252, 252, 1, 0, 48, 57, 2, 0, 69, 69, 101, 101,
		2, 0, 43, 43, 45, 45, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0,
		67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 70, 70, 102, 102, 2, 0, 71,
		71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74,
		74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77,
		77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80,
		80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83,
		83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86,
		86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89,
		89, 121, 121, 2, 0, 90, 90, 122, 122, 557, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0,
		0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0,
		0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1,
		0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0,
		111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0,
		0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 1, 195,
		1, 0, 0, 0, 3, 197, 1, 0, 0, 0, 5, 200, 1, 0, 0, 0, 7, 203, 1, 0, 0, 0,
		9, 206, 1, 0, 0, 0, 11, 209, 1, 0, 0, 0, 13, 212, 1, 0, 0, 0, 15, 215,
		1, 0, 0, 0, 17, 218, 1, 0, 0, 0, 19, 224, 1, 0, 0, 0, 21, 226, 1, 0, 0,
		0, 23, 235, 1, 0, 0, 0, 25, 241, 1, 0, 0, 0, 27, 245, 1, 0, 0, 0, 29, 248,
		1, 0, 0, 0, 31, 252, 1, 0, 0, 0, 33, 257, 1, 0, 0, 0, 35, 262, 1, 0, 0,
		0, 37, 269, 1, 0, 0, 0, 39, 275, 1, 0, 0, 0, 41, 280, 1, 0, 0, 0, 43, 287,
		1, 0, 0, 0, 45, 293, 1, 0, 0, 0, 47, 303, 1, 0, 0, 0, 49, 312, 1, 0, 0,
		0, 51, 322, 1, 0, 0, 0, 53, 327, 1, 0, 0, 0, 55, 332, 1, 0, 0, 0, 57, 336,
		1, 0, 0, 0, 59, 344, 1, 0, 0, 0, 61, 350, 1, 0, 0, 0, 63, 352, 1, 0, 0,
		0, 65, 354, 1, 0, 0, 0, 67, 356, 1, 0, 0, 0, 69, 358, 1, 0, 0, 0, 71, 360,
		1, 0, 0, 0, 73, 362, 1, 0, 0, 0, 75, 364, 1, 0, 0, 0, 77, 367, 1, 0, 0,
		0, 79, 369, 1, 0, 0, 0, 81, 372, 1, 0, 0, 0, 83, 374, 1, 0, 0, 0, 85, 376,
		1, 0, 0, 0, 87, 378, 1, 0, 0, 0, 89, 380, 1, 0, 0, 0, 91, 382, 1, 0, 0,
		0, 93, 384, 1, 0, 0, 0, 95, 386, 1, 0, 0, 0, 97, 388, 1, 0, 0, 0, 99, 390,
		1, 0, 0, 0, 101, 393, 1, 0, 0, 0, 103, 396, 1, 0, 0, 0, 105, 399, 1, 0,
		0, 0, 107, 402, 1, 0, 0, 0, 109, 405, 1, 0, 0, 0, 111, 408, 1, 0, 0, 0,
		113, 410, 1, 0, 0, 0, 115, 414, 1, 0, 0, 0, 117, 423, 1, 0, 0, 0, 119,
		434, 1, 0, 0, 0, 121, 438, 1, 0, 0, 0, 123, 452, 1, 0, 0, 0, 125, 465,
		1, 0, 0, 0, 127, 470, 1, 0, 0, 0, 129, 472, 1, 0, 0, 0, 131, 474, 1, 0,
		0, 0, 133, 476, 1, 0, 0, 0, 135, 497, 1, 0, 0, 0, 137, 505, 1, 0, 0, 0,
		139, 509, 1, 0, 0, 0, 141, 518, 1, 0, 0, 0, 143, 520, 1, 0, 0, 0, 145,
		522, 1, 0, 0, 0, 147, 524, 1, 0, 0, 0, 149, 526, 1, 0, 0, 0, 151, 528,
		1, 0, 0, 0, 153, 530, 1, 0, 0, 0, 155, 532, 1, 0, 0, 0, 157, 534, 1, 0,
		0, 0, 159, 536, 1, 0, 0, 0, 161, 538, 1, 0, 0, 0, 163, 540, 1, 0, 0, 0,
		165, 542, 1, 0, 0, 0, 167, 544, 1, 0, 0, 0, 169, 546, 1, 0, 0, 0, 171,
		548, 1, 0, 0, 0, 173, 550, 1, 0, 0, 0, 175, 552, 1, 0, 0, 0, 177, 554,
		1, 0, 0, 0, 179, 556, 1, 0, 0, 0, 181, 558, 1, 0, 0, 0, 183, 560, 1, 0,
		0, 0, 185, 562, 1, 0, 0, 0, 187, 564, 1, 0, 0, 0, 189, 566, 1, 0, 0, 0,
		191, 568, 1, 0, 0, 0, 193, 570, 1, 0, 0, 0, 195, 196, 5, 44, 0, 0, 196,
		2, 1, 0, 0, 0, 197, 198, 5, 60, 0, 0, 198, 199, 5, 60, 0, 0, 199, 4, 1,
		0, 0, 0, 200, 201, 5, 62, 0, 0, 201, 202, 5, 62, 0, 0, 202, 6, 1, 0, 0,
		0, 203, 204, 5, 60, 0, 0, 204, 205, 5, 61, 0, 0, 205, 8, 1, 0, 0, 0, 206,
		207, 5, 62, 0, 0, 207, 208, 5, 61, 0, 0, 208, 10, 1, 0, 0, 0, 209, 210,
		5, 61, 0, 0, 210, 211, 5, 61, 0, 0, 211, 12, 1, 0, 0, 0, 212, 213, 5, 33,
		0, 0, 213, 214, 5, 61, 0, 0, 214, 14, 1, 0, 0, 0, 215, 216, 5, 37, 0, 0,
		216, 16, 1, 0, 0, 0, 217, 219, 3, 133, 66, 0, 218, 217, 1, 0, 0, 0, 219,
		220, 1, 0, 0, 0, 220, 218, 1, 0, 0, 0, 220, 221, 1, 0, 0, 0, 221, 18, 1,
		0, 0, 0, 222, 225, 3, 135, 67, 0, 223, 225, 3, 137, 68, 0, 224, 222, 1,
		0, 0, 0, 224, 223, 1, 0, 0, 0, 225, 20, 1, 0, 0, 0, 226, 230, 5, 34, 0,
		0, 227, 229, 8, 0, 0, 0, 228, 227, 1, 0, 0, 0, 229, 232, 1, 0, 0, 0, 230,
		228, 1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231, 233, 1, 0, 0, 0, 232, 230,
		1, 0, 0, 0, 233, 234, 5, 34, 0, 0, 234, 22, 1, 0, 0, 0, 235, 236, 3, 145,
		72, 0, 236, 237, 3, 169, 84, 0, 237, 238, 3, 167, 83, 0, 238, 239, 3, 177,
		88, 0, 239, 240, 3, 179, 89, 0, 240, 24, 1, 0, 0, 0, 241, 242, 3, 183,
		91, 0, 242, 243, 3, 141, 70, 0, 243, 244, 3, 175, 87, 0, 244, 26, 1, 0,
		0, 0, 245, 246, 3, 157, 78, 0, 246, 247, 3, 151, 75, 0, 247, 28, 1, 0,
		0, 0, 248, 249, 3, 157, 78, 0, 249, 250, 3, 167, 83, 0, 250, 251, 3, 179,
		89, 0, 251, 30, 1, 0, 0, 0, 252, 253, 3, 149, 74, 0, 253, 254, 3, 163,
		81, 0, 254, 255, 3, 177, 88, 0, 255, 256, 3, 149, 74, 0, 256, 32, 1, 0,
		0, 0, 257, 258, 3, 151, 75, 0, 258, 259, 3, 181, 90, 0, 259, 260, 3, 167,
		83, 0, 260, 261, 3, 145, 72, 0, 261, 34, 1, 0, 0, 0, 262, 263, 3, 177,
		88, 0, 263, 264, 3, 179, 89, 0, 264, 265, 3, 175, 87, 0, 265, 266, 3, 157,
		78, 0, 266, 267, 3, 167, 83, 0, 267, 268, 3, 153, 76, 0, 268, 36, 1, 0,
		0, 0, 269, 270, 3, 145, 72, 0, 270, 271, 3, 163, 81, 0, 271, 272, 3, 141,
		70, 0, 272, 273, 3, 177, 88, 0, 273, 274, 3, 177, 88, 0, 274, 38, 1, 0,
		0, 0, 275, 276, 3, 183, 91, 0, 276, 277, 3, 169, 84, 0, 277, 278, 3, 157,
		78, 0, 278, 279, 3, 147, 73, 0, 279, 40, 1, 0, 0, 0, 280, 281, 3, 175,
		87, 0, 281, 282, 3, 149, 74, 0, 282, 283, 3, 179, 89, 0, 283, 284, 3, 181,
		90, 0, 284, 285, 3, 175, 87, 0, 285, 286, 3, 167, 83, 0, 286, 42, 1, 0,
		0, 0, 287, 288, 3, 151, 75, 0, 288, 289, 3, 163, 81, 0, 289, 290, 3, 169,
		84, 0, 290, 291, 3, 141, 70, 0, 291, 292, 3, 179, 89, 0, 292, 44, 1, 0,
		0, 0, 293, 294, 3, 171, 85, 0, 294, 295, 3, 175, 87, 0, 295, 296, 3, 169,
		84, 0, 296, 297, 3, 179, 89, 0, 297, 298, 3, 169, 84, 0, 298, 299, 3, 179,
		89, 0, 299, 300, 3, 189, 94, 0, 300, 301, 3, 171, 85, 0, 301, 302, 3, 149,
		74, 0, 302, 46, 1, 0, 0, 0, 303, 304, 3, 157, 78, 0, 304, 305, 3, 167,
		83, 0, 305, 306, 3, 177, 88, 0, 306, 307, 3, 179, 89, 0, 307, 308, 3, 141,
		70, 0, 308, 309, 3, 167, 83, 0, 309, 310, 3, 145, 72, 0, 310, 311, 3, 149,
		74, 0, 311, 48, 1, 0, 0, 0, 312, 313, 3, 167, 83, 0, 313, 314, 3, 141,
		70, 0, 314, 315, 3, 165, 82, 0, 315, 316, 3, 149, 74, 0, 316, 317, 3, 177,
		88, 0, 317, 318, 3, 171, 85, 0, 318, 319, 3, 141, 70, 0, 319, 320, 3, 145,
		72, 0, 320, 321, 3, 149, 74, 0, 321, 50, 1, 0, 0, 0, 322, 323, 3, 167,
		83, 0, 323, 324, 3, 181, 90, 0, 324, 325, 3, 163, 81, 0, 325, 326, 3, 163,
		81, 0, 326, 52, 1, 0, 0, 0, 327, 328, 3, 165, 82, 0, 328, 329, 3, 149,
		74, 0, 329, 330, 3, 179, 89, 0, 330, 331, 3, 141, 70, 0, 331, 54, 1, 0,
		0, 0, 332, 333, 5, 35, 0, 0, 333, 334, 3, 157, 78, 0, 334, 335, 3, 151,
		75, 0, 335, 56, 1, 0, 0, 0, 336, 337, 3, 193, 96, 0, 337, 338, 3, 157,
		78, 0, 338, 339, 3, 151, 75, 0, 339, 340, 3, 149, 74, 0, 340, 341, 3, 163,
		81, 0, 341, 342, 3, 177, 88, 0, 342, 343, 3, 149, 74, 0, 343, 58, 1, 0,
		0, 0, 344, 345, 3, 193, 96, 0, 345, 346, 3, 149, 74, 0, 346, 347, 3, 163,
		81, 0, 347, 348, 3, 177, 88, 0, 348, 349, 3, 149, 74, 0, 349, 60, 1, 0,
		0, 0, 350, 351, 5, 40, 0, 0, 351, 62, 1, 0, 0, 0, 352, 353, 5, 41, 0, 0,
		353, 64, 1, 0, 0, 0, 354, 355, 5, 91, 0, 0, 355, 66, 1, 0, 0, 0, 356, 357,
		5, 93, 0, 0, 357, 68, 1, 0, 0, 0, 358, 359, 5, 123, 0, 0, 359, 70, 1, 0,
		0, 0, 360, 361, 5, 125, 0, 0, 361, 72, 1, 0, 0, 0, 362, 363, 5, 38, 0,
		0, 363, 74, 1, 0, 0, 0, 364, 365, 5, 38, 0, 0, 365, 366, 5, 38, 0, 0, 366,
		76, 1, 0, 0, 0, 367, 368, 5, 124, 0, 0, 368, 78, 1, 0, 0, 0, 369, 370,
		5, 124, 0, 0, 370, 371, 5, 124, 0, 0, 371, 80, 1, 0, 0, 0, 372, 373, 5,
		43, 0, 0, 373, 82, 1, 0, 0, 0, 374, 375, 5, 45, 0, 0, 375, 84, 1, 0, 0,
		0, 376, 377, 5, 47, 0, 0, 377, 86, 1, 0, 0, 0, 378, 379, 5, 42, 0, 0, 379,
		88, 1, 0, 0, 0, 380, 381, 5, 126, 0, 0, 381, 90, 1, 0, 0, 0, 382, 383,
		5, 33, 0, 0, 383, 92, 1, 0, 0, 0, 384, 385, 5, 61, 0, 0, 385, 94, 1, 0,
		0, 0, 386, 387, 5, 60, 0, 0, 387, 96, 1, 0, 0, 0, 388, 389, 5, 62, 0, 0,
		389, 98, 1, 0, 0, 0, 390, 391, 5, 43, 0, 0, 391, 392, 5, 61, 0, 0, 392,
		100, 1, 0, 0, 0, 393, 394, 5, 45, 0, 0, 394, 395, 5, 61, 0, 0, 395, 102,
		1, 0, 0, 0, 396, 397, 5, 42, 0, 0, 397, 398, 5, 61, 0, 0, 398, 104, 1,
		0, 0, 0, 399, 400, 5, 47, 0, 0, 400, 401, 5, 61, 0, 0, 401, 106, 1, 0,
		0, 0, 402, 403, 5, 38, 0, 0, 403, 404, 5, 61, 0, 0, 404, 108, 1, 0, 0,
		0, 405, 406, 5, 124, 0, 0, 406, 407, 5, 61, 0, 0, 407, 110, 1, 0, 0, 0,
		408, 409, 5, 46, 0, 0, 409, 112, 1, 0, 0, 0, 410, 411, 5, 59, 0, 0, 411,
		114, 1, 0, 0, 0, 412, 415, 3, 125, 62, 0, 413, 415, 3, 133, 66, 0, 414,
		412, 1, 0, 0, 0, 414, 413, 1, 0, 0, 0, 415, 419, 1, 0, 0, 0, 416, 418,
		3, 127, 63, 0, 417, 416, 1, 0, 0, 0, 418, 421, 1, 0, 0, 0, 419, 417, 1,
		0, 0, 0, 419, 420, 1, 0, 0, 0, 420, 116, 1, 0, 0, 0, 421, 419, 1, 0, 0,
		0, 422, 424, 7, 1, 0, 0, 423, 422, 1, 0, 0, 0, 424, 425, 1, 0, 0, 0, 425,
		423, 1, 0, 0, 0, 425, 426, 1, 0, 0, 0, 426, 427, 1, 0, 0, 0, 427, 428,
		6, 58, 0, 0, 428, 118, 1, 0, 0, 0, 429, 431, 5, 13, 0, 0, 430, 432, 5,
		10, 0, 0, 431, 430, 1, 0, 0, 0, 431, 432, 1, 0, 0, 0, 432, 435, 1, 0, 0,
		0, 433, 435, 5, 10, 0, 0, 434, 429, 1, 0, 0, 0, 434, 433, 1, 0, 0, 0, 435,
		436, 1, 0, 0, 0, 436, 437, 6, 59, 0, 0, 437, 120, 1, 0, 0, 0, 438, 439,
		5, 47, 0, 0, 439, 440, 5, 42, 0, 0, 440, 444, 1, 0, 0, 0, 441, 443, 9,
		0, 0, 0, 442, 441, 1, 0, 0, 0, 443, 446, 1, 0, 0, 0, 444, 445, 1, 0, 0,
		0, 444, 442, 1, 0, 0, 0, 445, 447, 1, 0, 0, 0, 446, 444, 1, 0, 0, 0, 447,
		448, 5, 42, 0, 0, 448, 449, 5, 47, 0, 0, 449, 450, 1, 0, 0, 0, 450, 451,
		6, 60, 0, 0, 451, 122, 1, 0, 0, 0, 452, 453, 5, 47, 0, 0, 453, 454, 5,
		47, 0, 0, 454, 458, 1, 0, 0, 0, 455, 457, 8, 2, 0, 0, 456, 455, 1, 0, 0,
		0, 457, 460, 1, 0, 0, 0, 458, 456, 1, 0, 0, 0, 458, 459, 1, 0, 0, 0, 459,
		461, 1, 0, 0, 0, 460, 458, 1, 0, 0, 0, 461, 462, 6, 61, 1, 0, 462, 124,
		1, 0, 0, 0, 463, 466, 3, 131, 65, 0, 464, 466, 7, 3, 0, 0, 465, 463, 1,
		0, 0, 0, 465, 464, 1, 0, 0, 0, 466, 126, 1, 0, 0, 0, 467, 471, 3, 125,
		62, 0, 468, 471, 3, 129, 64, 0, 469, 471, 3, 133, 66, 0, 470, 467, 1, 0,
		0, 0, 470, 468, 1, 0, 0, 0, 470, 469, 1, 0, 0, 0, 471, 128, 1, 0, 0, 0,
		472, 473, 7, 4, 0, 0, 473, 130, 1, 0, 0, 0, 474, 475, 7, 5, 0, 0, 475,
		132, 1, 0, 0, 0, 476, 477, 7, 6, 0, 0, 477, 134, 1, 0, 0, 0, 478, 480,
		3, 133, 66, 0, 479, 478, 1, 0, 0, 0, 480, 483, 1, 0, 0, 0, 481, 479, 1,
		0, 0, 0, 481, 482, 1, 0, 0, 0, 482, 484, 1, 0, 0, 0, 483, 481, 1, 0, 0,
		0, 484, 486, 5, 46, 0, 0, 485, 487, 3, 133, 66, 0, 486, 485, 1, 0, 0, 0,
		487, 488, 1, 0, 0, 0, 488, 486, 1, 0, 0, 0, 488, 489, 1, 0, 0, 0, 489,
		498, 1, 0, 0, 0, 490, 492, 3, 133, 66, 0, 491, 490, 1, 0, 0, 0, 492, 493,
		1, 0, 0, 0, 493, 491, 1, 0, 0, 0, 493, 494, 1, 0, 0, 0, 494, 495, 1, 0,
		0, 0, 495, 496, 5, 46, 0, 0, 496, 498, 1, 0, 0, 0, 497, 481, 1, 0, 0, 0,
		497, 491, 1, 0, 0, 0, 498, 136, 1, 0, 0, 0, 499, 501, 3, 133, 66, 0, 500,
		499, 1, 0, 0, 0, 501, 502, 1, 0, 0, 0, 502, 500, 1, 0, 0, 0, 502, 503,
		1, 0, 0, 0, 503, 506, 1, 0, 0, 0, 504, 506, 3, 135, 67, 0, 505, 500, 1,
		0, 0, 0, 505, 504, 1, 0, 0, 0, 506, 507, 1, 0, 0, 0, 507, 508, 3, 139,
		69, 0, 508, 138, 1, 0, 0, 0, 509, 511, 7, 7, 0, 0, 510, 512, 7, 8, 0, 0,
		511, 510, 1, 0, 0, 0, 511, 512, 1, 0, 0, 0, 512, 514, 1, 0, 0, 0, 513,
		515, 3, 133, 66, 0, 514, 513, 1, 0, 0, 0, 515, 516, 1, 0, 0, 0, 516, 514,
		1, 0, 0, 0, 516, 517, 1, 0, 0, 0, 517, 140, 1, 0, 0, 0, 518, 519, 7, 9,
		0, 0, 519, 142, 1, 0, 0, 0, 520, 521, 7, 10, 0, 0, 521, 144, 1, 0, 0, 0,
		522, 523, 7, 11, 0, 0, 523, 146, 1, 0, 0, 0, 524, 525, 7, 12, 0, 0, 525,
		148, 1, 0, 0, 0, 526, 527, 7, 7, 0, 0, 527, 150, 1, 0, 0, 0, 528, 529,
		7, 13, 0, 0, 529, 152, 1, 0, 0, 0, 530, 531, 7, 14, 0, 0, 531, 154, 1,
		0, 0, 0, 532, 533, 7, 15, 0, 0, 533, 156, 1, 0, 0, 0, 534, 535, 7, 16,
		0, 0, 535, 158, 1, 0, 0, 0, 536, 537, 7, 17, 0, 0, 537, 160, 1, 0, 0, 0,
		538, 539, 7, 18, 0, 0, 539, 162, 1, 0, 0, 0, 540, 541, 7, 19, 0, 0, 541,
		164, 1, 0, 0, 0, 542, 543, 7, 20, 0, 0, 543, 166, 1, 0, 0, 0, 544, 545,
		7, 21, 0, 0, 545, 168, 1, 0, 0, 0, 546, 547, 7, 22, 0, 0, 547, 170, 1,
		0, 0, 0, 548, 549, 7, 23, 0, 0, 549, 172, 1, 0, 0, 0, 550, 551, 7, 24,
		0, 0, 551, 174, 1, 0, 0, 0, 552, 553, 7, 25, 0, 0, 553, 176, 1, 0, 0, 0,
		554, 555, 7, 26, 0, 0, 555, 178, 1, 0, 0, 0, 556, 557, 7, 27, 0, 0, 557,
		180, 1, 0, 0, 0, 558, 559, 7, 28, 0, 0, 559, 182, 1, 0, 0, 0, 560, 561,
		7, 29, 0, 0, 561, 184, 1, 0, 0, 0, 562, 563, 7, 30, 0, 0, 563, 186, 1,
		0, 0, 0, 564, 565, 7, 31, 0, 0, 565, 188, 1, 0, 0, 0, 566, 567, 7, 32,
		0, 0, 567, 190, 1, 0, 0, 0, 568, 569, 7, 33, 0, 0, 569, 192, 1, 0, 0, 0,
		570, 571, 5, 35, 0, 0, 571, 194, 1, 0, 0, 0, 21, 0, 220, 224, 230, 414,
		419, 425, 431, 434, 444, 458, 465, 470, 481, 488, 493, 497, 502, 505, 511,
		516, 2, 6, 0, 0, 0, 2, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DaedalusLexerInit initializes any static state used to implement DaedalusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDaedalusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DaedalusLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.once.Do(daedaluslexerLexerInit)
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	DaedalusLexerInit()
	l := new(DaedalusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &daedaluslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0           = 1
	DaedalusLexerT__1           = 2
	DaedalusLexerT__2           = 3
	DaedalusLexerT__3           = 4
	DaedalusLexerT__4           = 5
	DaedalusLexerT__5           = 6
	DaedalusLexerT__6           = 7
	DaedalusLexerT__7           = 8
	DaedalusLexerIntegerLiteral = 9
	DaedalusLexerFloatLiteral   = 10
	DaedalusLexerStringLiteral  = 11
	DaedalusLexerConst          = 12
	DaedalusLexerVar            = 13
	DaedalusLexerIf             = 14
	DaedalusLexerInt            = 15
	DaedalusLexerElse           = 16
	DaedalusLexerFunc           = 17
	DaedalusLexerStringKeyword  = 18
	DaedalusLexerClass          = 19
	DaedalusLexerVoid           = 20
	DaedalusLexerReturn         = 21
	DaedalusLexerFloat          = 22
	DaedalusLexerPrototype      = 23
	DaedalusLexerInstance       = 24
	DaedalusLexerNamespace      = 25
	DaedalusLexerNull           = 26
	DaedalusLexerMeta           = 27
	DaedalusLexerMacroIF        = 28
	DaedalusLexerMacroELSEIF    = 29
	DaedalusLexerMacroELSE      = 30
	DaedalusLexerLeftParen      = 31
	DaedalusLexerRightParen     = 32
	DaedalusLexerLeftBracket    = 33
	DaedalusLexerRightBracket   = 34
	DaedalusLexerLeftBrace      = 35
	DaedalusLexerRightBrace     = 36
	DaedalusLexerBitAnd         = 37
	DaedalusLexerAnd            = 38
	DaedalusLexerBitOr          = 39
	DaedalusLexerOr             = 40
	DaedalusLexerPlus           = 41
	DaedalusLexerMinus          = 42
	DaedalusLexerDiv            = 43
	DaedalusLexerStar           = 44
	DaedalusLexerTilde          = 45
	DaedalusLexerNot            = 46
	DaedalusLexerAssign         = 47
	DaedalusLexerLess           = 48
	DaedalusLexerGreater        = 49
	DaedalusLexerPlusAssign     = 50
	DaedalusLexerMinusAssign    = 51
	DaedalusLexerStarAssign     = 52
	DaedalusLexerDivAssign      = 53
	DaedalusLexerAndAssign      = 54
	DaedalusLexerOrAssign       = 55
	DaedalusLexerDot            = 56
	DaedalusLexerSemi           = 57
	DaedalusLexerIdentifier     = 58
	DaedalusLexerWhitespace     = 59
	DaedalusLexerNewline        = 60
	DaedalusLexerBlockComment   = 61
	DaedalusLexerLineComment    = 62
)

const (
	// Channel that contains comments
	COMMENTS int = 2
)
