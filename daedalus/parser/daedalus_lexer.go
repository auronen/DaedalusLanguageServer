// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var daedaluslexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func daedaluslexerLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "','", "'...'", "'<<'", "'>>'", "'<='", "'>='", "'=='", "'!='",
		"'%'", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "'('", "')'", "'['",
		"']'", "'{'", "'}'", "'&'", "'&&'", "'|'", "'||'", "'+'", "'-'", "'/'",
		"'*'", "'~'", "'!'", "'='", "'<'", "'>'", "'+='", "'-='", "'*='", "'/='",
		"'&='", "'|='", "'.'", "';'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "IntegerLiteral", "FloatLiteral",
		"StringLiteral", "Var", "Const", "Class", "Prototype", "Instance", "If",
		"Else", "Null", "Return", "Namespace", "Func", "Int", "Float", "StringKeyword",
		"Void", "Event", "Meta", "While", "Continue", "Break", "Test", "Mif",
		"Melif", "Melse", "Mendif", "LeftParen", "RightParen", "LeftBracket",
		"RightBracket", "LeftBrace", "RightBrace", "BitAnd", "And", "BitOr",
		"Or", "Plus", "Minus", "Div", "Star", "Tilde", "Not", "Assign", "Less",
		"Greater", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", "AndAssign",
		"OrAssign", "Dot", "Semi", "Identifier", "Whitespace", "Newline", "BlockComment",
		"LineComment",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"IntegerLiteral", "FloatLiteral", "StringLiteral", "Var", "Const", "Class",
		"Prototype", "Instance", "If", "Else", "Null", "Return", "Namespace",
		"Func", "Int", "Float", "StringKeyword", "Void", "Event", "Meta", "While",
		"Continue", "Break", "Test", "Mif", "Melif", "Melse", "Mendif", "LeftParen",
		"RightParen", "LeftBracket", "RightBracket", "LeftBrace", "RightBrace",
		"BitAnd", "And", "BitOr", "Or", "Plus", "Minus", "Div", "Star", "Tilde",
		"Not", "Assign", "Less", "Greater", "PlusAssign", "MinusAssign", "StarAssign",
		"DivAssign", "AndAssign", "OrAssign", "Dot", "Semi", "Identifier", "Whitespace",
		"Newline", "BlockComment", "LineComment", "NonDigit", "IdContinue",
		"IdSpecial", "GermanCharacter", "Digit", "PointFloat", "ExponentFloat",
		"Exponent", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L",
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
		"M_",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 69, 627, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99,
		7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7, 102, 2, 103, 7, 103,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3,
		1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7,
		1, 8, 1, 8, 1, 9, 4, 9, 237, 8, 9, 11, 9, 12, 9, 238, 1, 10, 1, 10, 3,
		10, 243, 8, 10, 1, 11, 1, 11, 5, 11, 247, 8, 11, 10, 11, 12, 11, 250, 9,
		11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1,
		31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38,
		1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1,
		53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57,
		1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1,
		61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 3, 64, 470,
		8, 64, 1, 64, 5, 64, 473, 8, 64, 10, 64, 12, 64, 476, 9, 64, 1, 65, 4,
		65, 479, 8, 65, 11, 65, 12, 65, 480, 1, 65, 1, 65, 1, 66, 1, 66, 3, 66,
		487, 8, 66, 1, 66, 3, 66, 490, 8, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67,
		1, 67, 5, 67, 498, 8, 67, 10, 67, 12, 67, 501, 9, 67, 1, 67, 1, 67, 1,
		67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 5, 68, 512, 8, 68, 10, 68,
		12, 68, 515, 9, 68, 1, 68, 1, 68, 1, 69, 1, 69, 3, 69, 521, 8, 69, 1, 70,
		1, 70, 1, 70, 3, 70, 526, 8, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1, 73, 1,
		73, 1, 74, 5, 74, 535, 8, 74, 10, 74, 12, 74, 538, 9, 74, 1, 74, 1, 74,
		4, 74, 542, 8, 74, 11, 74, 12, 74, 543, 1, 74, 4, 74, 547, 8, 74, 11, 74,
		12, 74, 548, 1, 74, 1, 74, 3, 74, 553, 8, 74, 1, 75, 4, 75, 556, 8, 75,
		11, 75, 12, 75, 557, 1, 75, 3, 75, 561, 8, 75, 1, 75, 1, 75, 1, 76, 1,
		76, 3, 76, 567, 8, 76, 1, 76, 4, 76, 570, 8, 76, 11, 76, 12, 76, 571, 1,
		77, 1, 77, 1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1, 82,
		1, 82, 1, 83, 1, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87, 1,
		87, 1, 88, 1, 88, 1, 89, 1, 89, 1, 90, 1, 90, 1, 91, 1, 91, 1, 92, 1, 92,
		1, 93, 1, 93, 1, 94, 1, 94, 1, 95, 1, 95, 1, 96, 1, 96, 1, 97, 1, 97, 1,
		98, 1, 98, 1, 99, 1, 99, 1, 100, 1, 100, 1, 101, 1, 101, 1, 102, 1, 102,
		1, 103, 1, 103, 1, 499, 0, 104, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13,
		7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16,
		33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25,
		51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34,
		69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43,
		87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52,
		105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60,
		121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67, 135, 68,
		137, 69, 139, 0, 141, 0, 143, 0, 145, 0, 147, 0, 149, 0, 151, 0, 153, 0,
		155, 0, 157, 0, 159, 0, 161, 0, 163, 0, 165, 0, 167, 0, 169, 0, 171, 0,
		173, 0, 175, 0, 177, 0, 179, 0, 181, 0, 183, 0, 185, 0, 187, 0, 189, 0,
		191, 0, 193, 0, 195, 0, 197, 0, 199, 0, 201, 0, 203, 0, 205, 0, 207, 0,
		1, 0, 34, 3, 0, 10, 10, 13, 13, 34, 34, 2, 0, 9, 9, 32, 32, 2, 0, 10, 10,
		13, 13, 3, 0, 65, 90, 95, 95, 97, 122, 2, 0, 64, 64, 94, 94, 7, 0, 196,
		196, 214, 214, 220, 220, 223, 223, 228, 228, 246, 246, 252, 252, 1, 0,
		48, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 65, 65, 97,
		97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100,
		2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104,
		2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107,
		2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110,
		2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113,
		2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116,
		2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119,
		2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122,
		612, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0,
		0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1,
		0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23,
		1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0,
		31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0,
		0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0,
		0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0,
		0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1,
		0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69,
		1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0,
		77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0,
		0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0,
		0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0,
		0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107,
		1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0,
		0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1,
		0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0,
		129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0,
		0, 0, 0, 137, 1, 0, 0, 0, 1, 209, 1, 0, 0, 0, 3, 211, 1, 0, 0, 0, 5, 215,
		1, 0, 0, 0, 7, 218, 1, 0, 0, 0, 9, 221, 1, 0, 0, 0, 11, 224, 1, 0, 0, 0,
		13, 227, 1, 0, 0, 0, 15, 230, 1, 0, 0, 0, 17, 233, 1, 0, 0, 0, 19, 236,
		1, 0, 0, 0, 21, 242, 1, 0, 0, 0, 23, 244, 1, 0, 0, 0, 25, 253, 1, 0, 0,
		0, 27, 257, 1, 0, 0, 0, 29, 263, 1, 0, 0, 0, 31, 269, 1, 0, 0, 0, 33, 279,
		1, 0, 0, 0, 35, 288, 1, 0, 0, 0, 37, 291, 1, 0, 0, 0, 39, 296, 1, 0, 0,
		0, 41, 301, 1, 0, 0, 0, 43, 308, 1, 0, 0, 0, 45, 318, 1, 0, 0, 0, 47, 323,
		1, 0, 0, 0, 49, 327, 1, 0, 0, 0, 51, 333, 1, 0, 0, 0, 53, 340, 1, 0, 0,
		0, 55, 345, 1, 0, 0, 0, 57, 351, 1, 0, 0, 0, 59, 356, 1, 0, 0, 0, 61, 362,
		1, 0, 0, 0, 63, 371, 1, 0, 0, 0, 65, 377, 1, 0, 0, 0, 67, 382, 1, 0, 0,
		0, 69, 386, 1, 0, 0, 0, 71, 392, 1, 0, 0, 0, 73, 398, 1, 0, 0, 0, 75, 405,
		1, 0, 0, 0, 77, 407, 1, 0, 0, 0, 79, 409, 1, 0, 0, 0, 81, 411, 1, 0, 0,
		0, 83, 413, 1, 0, 0, 0, 85, 415, 1, 0, 0, 0, 87, 417, 1, 0, 0, 0, 89, 419,
		1, 0, 0, 0, 91, 422, 1, 0, 0, 0, 93, 424, 1, 0, 0, 0, 95, 427, 1, 0, 0,
		0, 97, 429, 1, 0, 0, 0, 99, 431, 1, 0, 0, 0, 101, 433, 1, 0, 0, 0, 103,
		435, 1, 0, 0, 0, 105, 437, 1, 0, 0, 0, 107, 439, 1, 0, 0, 0, 109, 441,
		1, 0, 0, 0, 111, 443, 1, 0, 0, 0, 113, 445, 1, 0, 0, 0, 115, 448, 1, 0,
		0, 0, 117, 451, 1, 0, 0, 0, 119, 454, 1, 0, 0, 0, 121, 457, 1, 0, 0, 0,
		123, 460, 1, 0, 0, 0, 125, 463, 1, 0, 0, 0, 127, 465, 1, 0, 0, 0, 129,
		469, 1, 0, 0, 0, 131, 478, 1, 0, 0, 0, 133, 489, 1, 0, 0, 0, 135, 493,
		1, 0, 0, 0, 137, 507, 1, 0, 0, 0, 139, 520, 1, 0, 0, 0, 141, 525, 1, 0,
		0, 0, 143, 527, 1, 0, 0, 0, 145, 529, 1, 0, 0, 0, 147, 531, 1, 0, 0, 0,
		149, 552, 1, 0, 0, 0, 151, 560, 1, 0, 0, 0, 153, 564, 1, 0, 0, 0, 155,
		573, 1, 0, 0, 0, 157, 575, 1, 0, 0, 0, 159, 577, 1, 0, 0, 0, 161, 579,
		1, 0, 0, 0, 163, 581, 1, 0, 0, 0, 165, 583, 1, 0, 0, 0, 167, 585, 1, 0,
		0, 0, 169, 587, 1, 0, 0, 0, 171, 589, 1, 0, 0, 0, 173, 591, 1, 0, 0, 0,
		175, 593, 1, 0, 0, 0, 177, 595, 1, 0, 0, 0, 179, 597, 1, 0, 0, 0, 181,
		599, 1, 0, 0, 0, 183, 601, 1, 0, 0, 0, 185, 603, 1, 0, 0, 0, 187, 605,
		1, 0, 0, 0, 189, 607, 1, 0, 0, 0, 191, 609, 1, 0, 0, 0, 193, 611, 1, 0,
		0, 0, 195, 613, 1, 0, 0, 0, 197, 615, 1, 0, 0, 0, 199, 617, 1, 0, 0, 0,
		201, 619, 1, 0, 0, 0, 203, 621, 1, 0, 0, 0, 205, 623, 1, 0, 0, 0, 207,
		625, 1, 0, 0, 0, 209, 210, 5, 44, 0, 0, 210, 2, 1, 0, 0, 0, 211, 212, 5,
		46, 0, 0, 212, 213, 5, 46, 0, 0, 213, 214, 5, 46, 0, 0, 214, 4, 1, 0, 0,
		0, 215, 216, 5, 60, 0, 0, 216, 217, 5, 60, 0, 0, 217, 6, 1, 0, 0, 0, 218,
		219, 5, 62, 0, 0, 219, 220, 5, 62, 0, 0, 220, 8, 1, 0, 0, 0, 221, 222,
		5, 60, 0, 0, 222, 223, 5, 61, 0, 0, 223, 10, 1, 0, 0, 0, 224, 225, 5, 62,
		0, 0, 225, 226, 5, 61, 0, 0, 226, 12, 1, 0, 0, 0, 227, 228, 5, 61, 0, 0,
		228, 229, 5, 61, 0, 0, 229, 14, 1, 0, 0, 0, 230, 231, 5, 33, 0, 0, 231,
		232, 5, 61, 0, 0, 232, 16, 1, 0, 0, 0, 233, 234, 5, 37, 0, 0, 234, 18,
		1, 0, 0, 0, 235, 237, 3, 147, 73, 0, 236, 235, 1, 0, 0, 0, 237, 238, 1,
		0, 0, 0, 238, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 20, 1, 0, 0,
		0, 240, 243, 3, 149, 74, 0, 241, 243, 3, 151, 75, 0, 242, 240, 1, 0, 0,
		0, 242, 241, 1, 0, 0, 0, 243, 22, 1, 0, 0, 0, 244, 248, 5, 34, 0, 0, 245,
		247, 8, 0, 0, 0, 246, 245, 1, 0, 0, 0, 247, 250, 1, 0, 0, 0, 248, 246,
		1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 251, 1, 0, 0, 0, 250, 248, 1, 0,
		0, 0, 251, 252, 5, 34, 0, 0, 252, 24, 1, 0, 0, 0, 253, 254, 3, 197, 98,
		0, 254, 255, 3, 155, 77, 0, 255, 256, 3, 189, 94, 0, 256, 26, 1, 0, 0,
		0, 257, 258, 3, 159, 79, 0, 258, 259, 3, 183, 91, 0, 259, 260, 3, 181,
		90, 0, 260, 261, 3, 191, 95, 0, 261, 262, 3, 193, 96, 0, 262, 28, 1, 0,
		0, 0, 263, 264, 3, 159, 79, 0, 264, 265, 3, 177, 88, 0, 265, 266, 3, 155,
		77, 0, 266, 267, 3, 191, 95, 0, 267, 268, 3, 191, 95, 0, 268, 30, 1, 0,
		0, 0, 269, 270, 3, 185, 92, 0, 270, 271, 3, 189, 94, 0, 271, 272, 3, 183,
		91, 0, 272, 273, 3, 193, 96, 0, 273, 274, 3, 183, 91, 0, 274, 275, 3, 193,
		96, 0, 275, 276, 3, 203, 101, 0, 276, 277, 3, 185, 92, 0, 277, 278, 3,
		163, 81, 0, 278, 32, 1, 0, 0, 0, 279, 280, 3, 171, 85, 0, 280, 281, 3,
		181, 90, 0, 281, 282, 3, 191, 95, 0, 282, 283, 3, 193, 96, 0, 283, 284,
		3, 155, 77, 0, 284, 285, 3, 181, 90, 0, 285, 286, 3, 159, 79, 0, 286, 287,
		3, 163, 81, 0, 287, 34, 1, 0, 0, 0, 288, 289, 3, 171, 85, 0, 289, 290,
		3, 165, 82, 0, 290, 36, 1, 0, 0, 0, 291, 292, 3, 163, 81, 0, 292, 293,
		3, 177, 88, 0, 293, 294, 3, 191, 95, 0, 294, 295, 3, 163, 81, 0, 295, 38,
		1, 0, 0, 0, 296, 297, 3, 181, 90, 0, 297, 298, 3, 195, 97, 0, 298, 299,
		3, 177, 88, 0, 299, 300, 3, 177, 88, 0, 300, 40, 1, 0, 0, 0, 301, 302,
		3, 189, 94, 0, 302, 303, 3, 163, 81, 0, 303, 304, 3, 193, 96, 0, 304, 305,
		3, 195, 97, 0, 305, 306, 3, 189, 94, 0, 306, 307, 3, 181, 90, 0, 307, 42,
		1, 0, 0, 0, 308, 309, 3, 181, 90, 0, 309, 310, 3, 155, 77, 0, 310, 311,
		3, 179, 89, 0, 311, 312, 3, 163, 81, 0, 312, 313, 3, 191, 95, 0, 313, 314,
		3, 185, 92, 0, 314, 315, 3, 155, 77, 0, 315, 316, 3, 159, 79, 0, 316, 317,
		3, 163, 81, 0, 317, 44, 1, 0, 0, 0, 318, 319, 3, 165, 82, 0, 319, 320,
		3, 195, 97, 0, 320, 321, 3, 181, 90, 0, 321, 322, 3, 159, 79, 0, 322, 46,
		1, 0, 0, 0, 323, 324, 3, 171, 85, 0, 324, 325, 3, 181, 90, 0, 325, 326,
		3, 193, 96, 0, 326, 48, 1, 0, 0, 0, 327, 328, 3, 165, 82, 0, 328, 329,
		3, 177, 88, 0, 329, 330, 3, 183, 91, 0, 330, 331, 3, 155, 77, 0, 331, 332,
		3, 193, 96, 0, 332, 50, 1, 0, 0, 0, 333, 334, 3, 191, 95, 0, 334, 335,
		3, 193, 96, 0, 335, 336, 3, 189, 94, 0, 336, 337, 3, 171, 85, 0, 337, 338,
		3, 181, 90, 0, 338, 339, 3, 167, 83, 0, 339, 52, 1, 0, 0, 0, 340, 341,
		3, 197, 98, 0, 341, 342, 3, 183, 91, 0, 342, 343, 3, 171, 85, 0, 343, 344,
		3, 161, 80, 0, 344, 54, 1, 0, 0, 0, 345, 346, 3, 163, 81, 0, 346, 347,
		3, 197, 98, 0, 347, 348, 3, 163, 81, 0, 348, 349, 3, 181, 90, 0, 349, 350,
		3, 193, 96, 0, 350, 56, 1, 0, 0, 0, 351, 352, 3, 179, 89, 0, 352, 353,
		3, 163, 81, 0, 353, 354, 3, 193, 96, 0, 354, 355, 3, 155, 77, 0, 355, 58,
		1, 0, 0, 0, 356, 357, 3, 199, 99, 0, 357, 358, 3, 169, 84, 0, 358, 359,
		3, 171, 85, 0, 359, 360, 3, 177, 88, 0, 360, 361, 3, 163, 81, 0, 361, 60,
		1, 0, 0, 0, 362, 363, 3, 159, 79, 0, 363, 364, 3, 183, 91, 0, 364, 365,
		3, 181, 90, 0, 365, 366, 3, 193, 96, 0, 366, 367, 3, 171, 85, 0, 367, 368,
		3, 181, 90, 0, 368, 369, 3, 195, 97, 0, 369, 370, 3, 163, 81, 0, 370, 62,
		1, 0, 0, 0, 371, 372, 3, 157, 78, 0, 372, 373, 3, 189, 94, 0, 373, 374,
		3, 163, 81, 0, 374, 375, 3, 155, 77, 0, 375, 376, 3, 175, 87, 0, 376, 64,
		1, 0, 0, 0, 377, 378, 3, 193, 96, 0, 378, 379, 3, 163, 81, 0, 379, 380,
		3, 191, 95, 0, 380, 381, 3, 193, 96, 0, 381, 66, 1, 0, 0, 0, 382, 383,
		3, 207, 103, 0, 383, 384, 3, 171, 85, 0, 384, 385, 3, 165, 82, 0, 385,
		68, 1, 0, 0, 0, 386, 387, 3, 207, 103, 0, 387, 388, 3, 163, 81, 0, 388,
		389, 3, 177, 88, 0, 389, 390, 3, 171, 85, 0, 390, 391, 3, 165, 82, 0, 391,
		70, 1, 0, 0, 0, 392, 393, 3, 207, 103, 0, 393, 394, 3, 163, 81, 0, 394,
		395, 3, 177, 88, 0, 395, 396, 3, 191, 95, 0, 396, 397, 3, 163, 81, 0, 397,
		72, 1, 0, 0, 0, 398, 399, 3, 207, 103, 0, 399, 400, 3, 163, 81, 0, 400,
		401, 3, 181, 90, 0, 401, 402, 3, 161, 80, 0, 402, 403, 3, 171, 85, 0, 403,
		404, 3, 165, 82, 0, 404, 74, 1, 0, 0, 0, 405, 406, 5, 40, 0, 0, 406, 76,
		1, 0, 0, 0, 407, 408, 5, 41, 0, 0, 408, 78, 1, 0, 0, 0, 409, 410, 5, 91,
		0, 0, 410, 80, 1, 0, 0, 0, 411, 412, 5, 93, 0, 0, 412, 82, 1, 0, 0, 0,
		413, 414, 5, 123, 0, 0, 414, 84, 1, 0, 0, 0, 415, 416, 5, 125, 0, 0, 416,
		86, 1, 0, 0, 0, 417, 418, 5, 38, 0, 0, 418, 88, 1, 0, 0, 0, 419, 420, 5,
		38, 0, 0, 420, 421, 5, 38, 0, 0, 421, 90, 1, 0, 0, 0, 422, 423, 5, 124,
		0, 0, 423, 92, 1, 0, 0, 0, 424, 425, 5, 124, 0, 0, 425, 426, 5, 124, 0,
		0, 426, 94, 1, 0, 0, 0, 427, 428, 5, 43, 0, 0, 428, 96, 1, 0, 0, 0, 429,
		430, 5, 45, 0, 0, 430, 98, 1, 0, 0, 0, 431, 432, 5, 47, 0, 0, 432, 100,
		1, 0, 0, 0, 433, 434, 5, 42, 0, 0, 434, 102, 1, 0, 0, 0, 435, 436, 5, 126,
		0, 0, 436, 104, 1, 0, 0, 0, 437, 438, 5, 33, 0, 0, 438, 106, 1, 0, 0, 0,
		439, 440, 5, 61, 0, 0, 440, 108, 1, 0, 0, 0, 441, 442, 5, 60, 0, 0, 442,
		110, 1, 0, 0, 0, 443, 444, 5, 62, 0, 0, 444, 112, 1, 0, 0, 0, 445, 446,
		5, 43, 0, 0, 446, 447, 5, 61, 0, 0, 447, 114, 1, 0, 0, 0, 448, 449, 5,
		45, 0, 0, 449, 450, 5, 61, 0, 0, 450, 116, 1, 0, 0, 0, 451, 452, 5, 42,
		0, 0, 452, 453, 5, 61, 0, 0, 453, 118, 1, 0, 0, 0, 454, 455, 5, 47, 0,
		0, 455, 456, 5, 61, 0, 0, 456, 120, 1, 0, 0, 0, 457, 458, 5, 38, 0, 0,
		458, 459, 5, 61, 0, 0, 459, 122, 1, 0, 0, 0, 460, 461, 5, 124, 0, 0, 461,
		462, 5, 61, 0, 0, 462, 124, 1, 0, 0, 0, 463, 464, 5, 46, 0, 0, 464, 126,
		1, 0, 0, 0, 465, 466, 5, 59, 0, 0, 466, 128, 1, 0, 0, 0, 467, 470, 3, 139,
		69, 0, 468, 470, 3, 147, 73, 0, 469, 467, 1, 0, 0, 0, 469, 468, 1, 0, 0,
		0, 470, 474, 1, 0, 0, 0, 471, 473, 3, 141, 70, 0, 472, 471, 1, 0, 0, 0,
		473, 476, 1, 0, 0, 0, 474, 472, 1, 0, 0, 0, 474, 475, 1, 0, 0, 0, 475,
		130, 1, 0, 0, 0, 476, 474, 1, 0, 0, 0, 477, 479, 7, 1, 0, 0, 478, 477,
		1, 0, 0, 0, 479, 480, 1, 0, 0, 0, 480, 478, 1, 0, 0, 0, 480, 481, 1, 0,
		0, 0, 481, 482, 1, 0, 0, 0, 482, 483, 6, 65, 0, 0, 483, 132, 1, 0, 0, 0,
		484, 486, 5, 13, 0, 0, 485, 487, 5, 10, 0, 0, 486, 485, 1, 0, 0, 0, 486,
		487, 1, 0, 0, 0, 487, 490, 1, 0, 0, 0, 488, 490, 5, 10, 0, 0, 489, 484,
		1, 0, 0, 0, 489, 488, 1, 0, 0, 0, 490, 491, 1, 0, 0, 0, 491, 492, 6, 66,
		0, 0, 492, 134, 1, 0, 0, 0, 493, 494, 5, 47, 0, 0, 494, 495, 5, 42, 0,
		0, 495, 499, 1, 0, 0, 0, 496, 498, 9, 0, 0, 0, 497, 496, 1, 0, 0, 0, 498,
		501, 1, 0, 0, 0, 499, 500, 1, 0, 0, 0, 499, 497, 1, 0, 0, 0, 500, 502,
		1, 0, 0, 0, 501, 499, 1, 0, 0, 0, 502, 503, 5, 42, 0, 0, 503, 504, 5, 47,
		0, 0, 504, 505, 1, 0, 0, 0, 505, 506, 6, 67, 0, 0, 506, 136, 1, 0, 0, 0,
		507, 508, 5, 47, 0, 0, 508, 509, 5, 47, 0, 0, 509, 513, 1, 0, 0, 0, 510,
		512, 8, 2, 0, 0, 511, 510, 1, 0, 0, 0, 512, 515, 1, 0, 0, 0, 513, 511,
		1, 0, 0, 0, 513, 514, 1, 0, 0, 0, 514, 516, 1, 0, 0, 0, 515, 513, 1, 0,
		0, 0, 516, 517, 6, 68, 1, 0, 517, 138, 1, 0, 0, 0, 518, 521, 3, 145, 72,
		0, 519, 521, 7, 3, 0, 0, 520, 518, 1, 0, 0, 0, 520, 519, 1, 0, 0, 0, 521,
		140, 1, 0, 0, 0, 522, 526, 3, 139, 69, 0, 523, 526, 3, 143, 71, 0, 524,
		526, 3, 147, 73, 0, 525, 522, 1, 0, 0, 0, 525, 523, 1, 0, 0, 0, 525, 524,
		1, 0, 0, 0, 526, 142, 1, 0, 0, 0, 527, 528, 7, 4, 0, 0, 528, 144, 1, 0,
		0, 0, 529, 530, 7, 5, 0, 0, 530, 146, 1, 0, 0, 0, 531, 532, 7, 6, 0, 0,
		532, 148, 1, 0, 0, 0, 533, 535, 3, 147, 73, 0, 534, 533, 1, 0, 0, 0, 535,
		538, 1, 0, 0, 0, 536, 534, 1, 0, 0, 0, 536, 537, 1, 0, 0, 0, 537, 539,
		1, 0, 0, 0, 538, 536, 1, 0, 0, 0, 539, 541, 5, 46, 0, 0, 540, 542, 3, 147,
		73, 0, 541, 540, 1, 0, 0, 0, 542, 543, 1, 0, 0, 0, 543, 541, 1, 0, 0, 0,
		543, 544, 1, 0, 0, 0, 544, 553, 1, 0, 0, 0, 545, 547, 3, 147, 73, 0, 546,
		545, 1, 0, 0, 0, 547, 548, 1, 0, 0, 0, 548, 546, 1, 0, 0, 0, 548, 549,
		1, 0, 0, 0, 549, 550, 1, 0, 0, 0, 550, 551, 5, 46, 0, 0, 551, 553, 1, 0,
		0, 0, 552, 536, 1, 0, 0, 0, 552, 546, 1, 0, 0, 0, 553, 150, 1, 0, 0, 0,
		554, 556, 3, 147, 73, 0, 555, 554, 1, 0, 0, 0, 556, 557, 1, 0, 0, 0, 557,
		555, 1, 0, 0, 0, 557, 558, 1, 0, 0, 0, 558, 561, 1, 0, 0, 0, 559, 561,
		3, 149, 74, 0, 560, 555, 1, 0, 0, 0, 560, 559, 1, 0, 0, 0, 561, 562, 1,
		0, 0, 0, 562, 563, 3, 153, 76, 0, 563, 152, 1, 0, 0, 0, 564, 566, 7, 7,
		0, 0, 565, 567, 7, 8, 0, 0, 566, 565, 1, 0, 0, 0, 566, 567, 1, 0, 0, 0,
		567, 569, 1, 0, 0, 0, 568, 570, 3, 147, 73, 0, 569, 568, 1, 0, 0, 0, 570,
		571, 1, 0, 0, 0, 571, 569, 1, 0, 0, 0, 571, 572, 1, 0, 0, 0, 572, 154,
		1, 0, 0, 0, 573, 574, 7, 9, 0, 0, 574, 156, 1, 0, 0, 0, 575, 576, 7, 10,
		0, 0, 576, 158, 1, 0, 0, 0, 577, 578, 7, 11, 0, 0, 578, 160, 1, 0, 0, 0,
		579, 580, 7, 12, 0, 0, 580, 162, 1, 0, 0, 0, 581, 582, 7, 7, 0, 0, 582,
		164, 1, 0, 0, 0, 583, 584, 7, 13, 0, 0, 584, 166, 1, 0, 0, 0, 585, 586,
		7, 14, 0, 0, 586, 168, 1, 0, 0, 0, 587, 588, 7, 15, 0, 0, 588, 170, 1,
		0, 0, 0, 589, 590, 7, 16, 0, 0, 590, 172, 1, 0, 0, 0, 591, 592, 7, 17,
		0, 0, 592, 174, 1, 0, 0, 0, 593, 594, 7, 18, 0, 0, 594, 176, 1, 0, 0, 0,
		595, 596, 7, 19, 0, 0, 596, 178, 1, 0, 0, 0, 597, 598, 7, 20, 0, 0, 598,
		180, 1, 0, 0, 0, 599, 600, 7, 21, 0, 0, 600, 182, 1, 0, 0, 0, 601, 602,
		7, 22, 0, 0, 602, 184, 1, 0, 0, 0, 603, 604, 7, 23, 0, 0, 604, 186, 1,
		0, 0, 0, 605, 606, 7, 24, 0, 0, 606, 188, 1, 0, 0, 0, 607, 608, 7, 25,
		0, 0, 608, 190, 1, 0, 0, 0, 609, 610, 7, 26, 0, 0, 610, 192, 1, 0, 0, 0,
		611, 612, 7, 27, 0, 0, 612, 194, 1, 0, 0, 0, 613, 614, 7, 28, 0, 0, 614,
		196, 1, 0, 0, 0, 615, 616, 7, 29, 0, 0, 616, 198, 1, 0, 0, 0, 617, 618,
		7, 30, 0, 0, 618, 200, 1, 0, 0, 0, 619, 620, 7, 31, 0, 0, 620, 202, 1,
		0, 0, 0, 621, 622, 7, 32, 0, 0, 622, 204, 1, 0, 0, 0, 623, 624, 7, 33,
		0, 0, 624, 206, 1, 0, 0, 0, 625, 626, 5, 35, 0, 0, 626, 208, 1, 0, 0, 0,
		21, 0, 238, 242, 248, 469, 474, 480, 486, 489, 499, 513, 520, 525, 536,
		543, 548, 552, 557, 560, 566, 571, 2, 6, 0, 0, 0, 2, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DaedalusLexerInit initializes any static state used to implement DaedalusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDaedalusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DaedalusLexerInit() {
	staticData := &daedaluslexerLexerStaticData
	staticData.once.Do(daedaluslexerLexerInit)
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	DaedalusLexerInit()
	l := new(DaedalusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &daedaluslexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0           = 1
	DaedalusLexerT__1           = 2
	DaedalusLexerT__2           = 3
	DaedalusLexerT__3           = 4
	DaedalusLexerT__4           = 5
	DaedalusLexerT__5           = 6
	DaedalusLexerT__6           = 7
	DaedalusLexerT__7           = 8
	DaedalusLexerT__8           = 9
	DaedalusLexerIntegerLiteral = 10
	DaedalusLexerFloatLiteral   = 11
	DaedalusLexerStringLiteral  = 12
	DaedalusLexerVar            = 13
	DaedalusLexerConst          = 14
	DaedalusLexerClass          = 15
	DaedalusLexerPrototype      = 16
	DaedalusLexerInstance       = 17
	DaedalusLexerIf             = 18
	DaedalusLexerElse           = 19
	DaedalusLexerNull           = 20
	DaedalusLexerReturn         = 21
	DaedalusLexerNamespace      = 22
	DaedalusLexerFunc           = 23
	DaedalusLexerInt            = 24
	DaedalusLexerFloat          = 25
	DaedalusLexerStringKeyword  = 26
	DaedalusLexerVoid           = 27
	DaedalusLexerEvent          = 28
	DaedalusLexerMeta           = 29
	DaedalusLexerWhile          = 30
	DaedalusLexerContinue       = 31
	DaedalusLexerBreak          = 32
	DaedalusLexerTest           = 33
	DaedalusLexerMif            = 34
	DaedalusLexerMelif          = 35
	DaedalusLexerMelse          = 36
	DaedalusLexerMendif         = 37
	DaedalusLexerLeftParen      = 38
	DaedalusLexerRightParen     = 39
	DaedalusLexerLeftBracket    = 40
	DaedalusLexerRightBracket   = 41
	DaedalusLexerLeftBrace      = 42
	DaedalusLexerRightBrace     = 43
	DaedalusLexerBitAnd         = 44
	DaedalusLexerAnd            = 45
	DaedalusLexerBitOr          = 46
	DaedalusLexerOr             = 47
	DaedalusLexerPlus           = 48
	DaedalusLexerMinus          = 49
	DaedalusLexerDiv            = 50
	DaedalusLexerStar           = 51
	DaedalusLexerTilde          = 52
	DaedalusLexerNot            = 53
	DaedalusLexerAssign         = 54
	DaedalusLexerLess           = 55
	DaedalusLexerGreater        = 56
	DaedalusLexerPlusAssign     = 57
	DaedalusLexerMinusAssign    = 58
	DaedalusLexerStarAssign     = 59
	DaedalusLexerDivAssign      = 60
	DaedalusLexerAndAssign      = 61
	DaedalusLexerOrAssign       = 62
	DaedalusLexerDot            = 63
	DaedalusLexerSemi           = 64
	DaedalusLexerIdentifier     = 65
	DaedalusLexerWhitespace     = 66
	DaedalusLexerNewline        = 67
	DaedalusLexerBlockComment   = 68
	DaedalusLexerLineComment    = 69
)

const (
	// Channel that contains comments
	COMMENTS int = 2
)
