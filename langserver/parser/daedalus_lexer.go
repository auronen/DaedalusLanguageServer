// Code generated from Daedalus.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 60, 460,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 3, 2, 3,
	2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 13,
	3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3,
	25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29,
	3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 34, 3,
	34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36,
	3, 36, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3,
	39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41,
	3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3,
	43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44,
	3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3,
	46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47,
	3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3,
	49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 5, 50, 309,
	10, 50, 3, 50, 7, 50, 312, 10, 50, 12, 50, 14, 50, 315, 11, 50, 3, 51,
	6, 51, 318, 10, 51, 13, 51, 14, 51, 319, 3, 52, 3, 52, 5, 52, 324, 10,
	52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53, 5, 53, 331, 10, 53, 7, 53, 333,
	10, 53, 12, 53, 14, 53, 336, 11, 53, 3, 53, 3, 53, 3, 54, 6, 54, 341, 10,
	54, 13, 54, 14, 54, 342, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55,
	3, 55, 7, 55, 353, 10, 55, 12, 55, 14, 55, 356, 11, 55, 3, 55, 3, 55, 3,
	56, 3, 56, 6, 56, 362, 10, 56, 13, 56, 14, 56, 363, 3, 57, 3, 57, 3, 57,
	3, 57, 3, 58, 3, 58, 3, 58, 3, 58, 7, 58, 374, 10, 58, 12, 58, 14, 58,
	377, 11, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3,
	59, 7, 59, 388, 10, 59, 12, 59, 14, 59, 391, 11, 59, 3, 59, 3, 59, 3, 60,
	3, 60, 5, 60, 397, 10, 60, 3, 61, 6, 61, 400, 10, 61, 13, 61, 14, 61, 401,
	3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 5, 62, 409, 10, 62, 3, 63, 3, 63, 3,
	64, 3, 64, 3, 65, 3, 65, 3, 66, 7, 66, 418, 10, 66, 12, 66, 14, 66, 421,
	11, 66, 3, 66, 3, 66, 6, 66, 425, 10, 66, 13, 66, 14, 66, 426, 3, 66, 6,
	66, 430, 10, 66, 13, 66, 14, 66, 431, 3, 66, 3, 66, 5, 66, 436, 10, 66,
	3, 67, 6, 67, 439, 10, 67, 13, 67, 14, 67, 440, 3, 67, 5, 67, 444, 10,
	67, 3, 67, 3, 67, 3, 68, 3, 68, 5, 68, 450, 10, 68, 3, 68, 6, 68, 453,
	10, 68, 13, 68, 14, 68, 454, 3, 69, 3, 69, 3, 69, 3, 69, 3, 375, 2, 70,
	3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23,
	13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41,
	22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59,
	31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77,
	40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95,
	49, 97, 50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57,
	113, 58, 115, 59, 117, 60, 119, 2, 121, 2, 123, 2, 125, 2, 127, 2, 129,
	2, 131, 2, 133, 2, 135, 2, 137, 2, 3, 2, 27, 4, 2, 69, 69, 101, 101, 4,
	2, 81, 81, 113, 113, 4, 2, 80, 80, 112, 112, 4, 2, 85, 85, 117, 117, 4,
	2, 86, 86, 118, 118, 4, 2, 88, 88, 120, 120, 4, 2, 67, 67, 99, 99, 4, 2,
	84, 84, 116, 116, 4, 2, 75, 75, 107, 107, 4, 2, 72, 72, 104, 104, 4, 2,
	71, 71, 103, 103, 4, 2, 78, 78, 110, 110, 4, 2, 87, 87, 119, 119, 4, 2,
	73, 73, 105, 105, 4, 2, 70, 70, 102, 102, 4, 2, 82, 82, 114, 114, 4, 2,
	91, 91, 123, 123, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 11, 11, 34,
	34, 4, 2, 12, 12, 15, 15, 5, 2, 67, 92, 97, 97, 99, 124, 4, 2, 66, 66,
	96, 96, 9, 2, 198, 198, 216, 216, 222, 222, 225, 225, 230, 230, 248, 248,
	254, 254, 3, 2, 50, 59, 4, 2, 45, 45, 47, 47, 2, 473, 2, 3, 3, 2, 2, 2,
	2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2,
	2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2,
	2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43,
	3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2,
	51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2,
	2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2,
	2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2,
	2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3,
	2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89,
	3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2,
	97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2,
	2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111,
	3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2,
	3, 139, 3, 2, 2, 2, 5, 141, 3, 2, 2, 2, 7, 143, 3, 2, 2, 2, 9, 145, 3,
	2, 2, 2, 11, 147, 3, 2, 2, 2, 13, 149, 3, 2, 2, 2, 15, 151, 3, 2, 2, 2,
	17, 153, 3, 2, 2, 2, 19, 155, 3, 2, 2, 2, 21, 157, 3, 2, 2, 2, 23, 159,
	3, 2, 2, 2, 25, 162, 3, 2, 2, 2, 27, 165, 3, 2, 2, 2, 29, 168, 3, 2, 2,
	2, 31, 171, 3, 2, 2, 2, 33, 173, 3, 2, 2, 2, 35, 175, 3, 2, 2, 2, 37, 178,
	3, 2, 2, 2, 39, 181, 3, 2, 2, 2, 41, 183, 3, 2, 2, 2, 43, 185, 3, 2, 2,
	2, 45, 188, 3, 2, 2, 2, 47, 191, 3, 2, 2, 2, 49, 194, 3, 2, 2, 2, 51, 197,
	3, 2, 2, 2, 53, 199, 3, 2, 2, 2, 55, 201, 3, 2, 2, 2, 57, 203, 3, 2, 2,
	2, 59, 205, 3, 2, 2, 2, 61, 207, 3, 2, 2, 2, 63, 209, 3, 2, 2, 2, 65, 211,
	3, 2, 2, 2, 67, 214, 3, 2, 2, 2, 69, 217, 3, 2, 2, 2, 71, 223, 3, 2, 2,
	2, 73, 227, 3, 2, 2, 2, 75, 230, 3, 2, 2, 2, 77, 234, 3, 2, 2, 2, 79, 239,
	3, 2, 2, 2, 81, 244, 3, 2, 2, 2, 83, 251, 3, 2, 2, 2, 85, 257, 3, 2, 2,
	2, 87, 262, 3, 2, 2, 2, 89, 269, 3, 2, 2, 2, 91, 275, 3, 2, 2, 2, 93, 285,
	3, 2, 2, 2, 95, 294, 3, 2, 2, 2, 97, 299, 3, 2, 2, 2, 99, 308, 3, 2, 2,
	2, 101, 317, 3, 2, 2, 2, 103, 323, 3, 2, 2, 2, 105, 325, 3, 2, 2, 2, 107,
	340, 3, 2, 2, 2, 109, 346, 3, 2, 2, 2, 111, 359, 3, 2, 2, 2, 113, 365,
	3, 2, 2, 2, 115, 369, 3, 2, 2, 2, 117, 383, 3, 2, 2, 2, 119, 396, 3, 2,
	2, 2, 121, 399, 3, 2, 2, 2, 123, 408, 3, 2, 2, 2, 125, 410, 3, 2, 2, 2,
	127, 412, 3, 2, 2, 2, 129, 414, 3, 2, 2, 2, 131, 435, 3, 2, 2, 2, 133,
	443, 3, 2, 2, 2, 135, 447, 3, 2, 2, 2, 137, 456, 3, 2, 2, 2, 139, 140,
	7, 61, 2, 2, 140, 4, 3, 2, 2, 2, 141, 142, 7, 46, 2, 2, 142, 6, 3, 2, 2,
	2, 143, 144, 7, 125, 2, 2, 144, 8, 3, 2, 2, 2, 145, 146, 7, 127, 2, 2,
	146, 10, 3, 2, 2, 2, 147, 148, 7, 42, 2, 2, 148, 12, 3, 2, 2, 2, 149, 150,
	7, 43, 2, 2, 150, 14, 3, 2, 2, 2, 151, 152, 7, 93, 2, 2, 152, 16, 3, 2,
	2, 2, 153, 154, 7, 95, 2, 2, 154, 18, 3, 2, 2, 2, 155, 156, 7, 63, 2, 2,
	156, 20, 3, 2, 2, 2, 157, 158, 7, 48, 2, 2, 158, 22, 3, 2, 2, 2, 159, 160,
	7, 45, 2, 2, 160, 161, 7, 63, 2, 2, 161, 24, 3, 2, 2, 2, 162, 163, 7, 47,
	2, 2, 163, 164, 7, 63, 2, 2, 164, 26, 3, 2, 2, 2, 165, 166, 7, 44, 2, 2,
	166, 167, 7, 63, 2, 2, 167, 28, 3, 2, 2, 2, 168, 169, 7, 49, 2, 2, 169,
	170, 7, 63, 2, 2, 170, 30, 3, 2, 2, 2, 171, 172, 7, 45, 2, 2, 172, 32,
	3, 2, 2, 2, 173, 174, 7, 47, 2, 2, 174, 34, 3, 2, 2, 2, 175, 176, 7, 62,
	2, 2, 176, 177, 7, 62, 2, 2, 177, 36, 3, 2, 2, 2, 178, 179, 7, 64, 2, 2,
	179, 180, 7, 64, 2, 2, 180, 38, 3, 2, 2, 2, 181, 182, 7, 62, 2, 2, 182,
	40, 3, 2, 2, 2, 183, 184, 7, 64, 2, 2, 184, 42, 3, 2, 2, 2, 185, 186, 7,
	62, 2, 2, 186, 187, 7, 63, 2, 2, 187, 44, 3, 2, 2, 2, 188, 189, 7, 64,
	2, 2, 189, 190, 7, 63, 2, 2, 190, 46, 3, 2, 2, 2, 191, 192, 7, 63, 2, 2,
	192, 193, 7, 63, 2, 2, 193, 48, 3, 2, 2, 2, 194, 195, 7, 35, 2, 2, 195,
	196, 7, 63, 2, 2, 196, 50, 3, 2, 2, 2, 197, 198, 7, 35, 2, 2, 198, 52,
	3, 2, 2, 2, 199, 200, 7, 128, 2, 2, 200, 54, 3, 2, 2, 2, 201, 202, 7, 44,
	2, 2, 202, 56, 3, 2, 2, 2, 203, 204, 7, 49, 2, 2, 204, 58, 3, 2, 2, 2,
	205, 206, 7, 39, 2, 2, 206, 60, 3, 2, 2, 2, 207, 208, 7, 40, 2, 2, 208,
	62, 3, 2, 2, 2, 209, 210, 7, 126, 2, 2, 210, 64, 3, 2, 2, 2, 211, 212,
	7, 40, 2, 2, 212, 213, 7, 40, 2, 2, 213, 66, 3, 2, 2, 2, 214, 215, 7, 126,
	2, 2, 215, 216, 7, 126, 2, 2, 216, 68, 3, 2, 2, 2, 217, 218, 9, 2, 2, 2,
	218, 219, 9, 3, 2, 2, 219, 220, 9, 4, 2, 2, 220, 221, 9, 5, 2, 2, 221,
	222, 9, 6, 2, 2, 222, 70, 3, 2, 2, 2, 223, 224, 9, 7, 2, 2, 224, 225, 9,
	8, 2, 2, 225, 226, 9, 9, 2, 2, 226, 72, 3, 2, 2, 2, 227, 228, 9, 10, 2,
	2, 228, 229, 9, 11, 2, 2, 229, 74, 3, 2, 2, 2, 230, 231, 9, 10, 2, 2, 231,
	232, 9, 4, 2, 2, 232, 233, 9, 6, 2, 2, 233, 76, 3, 2, 2, 2, 234, 235, 9,
	12, 2, 2, 235, 236, 9, 13, 2, 2, 236, 237, 9, 5, 2, 2, 237, 238, 9, 12,
	2, 2, 238, 78, 3, 2, 2, 2, 239, 240, 9, 11, 2, 2, 240, 241, 9, 14, 2, 2,
	241, 242, 9, 4, 2, 2, 242, 243, 9, 2, 2, 2, 243, 80, 3, 2, 2, 2, 244, 245,
	9, 5, 2, 2, 245, 246, 9, 6, 2, 2, 246, 247, 9, 9, 2, 2, 247, 248, 9, 10,
	2, 2, 248, 249, 9, 4, 2, 2, 249, 250, 9, 15, 2, 2, 250, 82, 3, 2, 2, 2,
	251, 252, 9, 2, 2, 2, 252, 253, 9, 13, 2, 2, 253, 254, 9, 8, 2, 2, 254,
	255, 9, 5, 2, 2, 255, 256, 9, 5, 2, 2, 256, 84, 3, 2, 2, 2, 257, 258, 9,
	7, 2, 2, 258, 259, 9, 3, 2, 2, 259, 260, 9, 10, 2, 2, 260, 261, 9, 16,
	2, 2, 261, 86, 3, 2, 2, 2, 262, 263, 9, 9, 2, 2, 263, 264, 9, 12, 2, 2,
	264, 265, 9, 6, 2, 2, 265, 266, 9, 14, 2, 2, 266, 267, 9, 9, 2, 2, 267,
	268, 9, 4, 2, 2, 268, 88, 3, 2, 2, 2, 269, 270, 9, 11, 2, 2, 270, 271,
	9, 13, 2, 2, 271, 272, 9, 3, 2, 2, 272, 273, 9, 8, 2, 2, 273, 274, 9, 6,
	2, 2, 274, 90, 3, 2, 2, 2, 275, 276, 9, 17, 2, 2, 276, 277, 9, 9, 2, 2,
	277, 278, 9, 3, 2, 2, 278, 279, 9, 6, 2, 2, 279, 280, 9, 3, 2, 2, 280,
	281, 9, 6, 2, 2, 281, 282, 9, 18, 2, 2, 282, 283, 9, 17, 2, 2, 283, 284,
	9, 12, 2, 2, 284, 92, 3, 2, 2, 2, 285, 286, 9, 10, 2, 2, 286, 287, 9, 4,
	2, 2, 287, 288, 9, 5, 2, 2, 288, 289, 9, 6, 2, 2, 289, 290, 9, 8, 2, 2,
	290, 291, 9, 4, 2, 2, 291, 292, 9, 2, 2, 2, 292, 293, 9, 12, 2, 2, 293,
	94, 3, 2, 2, 2, 294, 295, 9, 4, 2, 2, 295, 296, 9, 14, 2, 2, 296, 297,
	9, 13, 2, 2, 297, 298, 9, 13, 2, 2, 298, 96, 3, 2, 2, 2, 299, 300, 9, 4,
	2, 2, 300, 301, 9, 3, 2, 2, 301, 302, 9, 11, 2, 2, 302, 303, 9, 14, 2,
	2, 303, 304, 9, 4, 2, 2, 304, 305, 9, 2, 2, 2, 305, 98, 3, 2, 2, 2, 306,
	309, 5, 119, 60, 2, 307, 309, 5, 121, 61, 2, 308, 306, 3, 2, 2, 2, 308,
	307, 3, 2, 2, 2, 309, 313, 3, 2, 2, 2, 310, 312, 5, 123, 62, 2, 311, 310,
	3, 2, 2, 2, 312, 315, 3, 2, 2, 2, 313, 311, 3, 2, 2, 2, 313, 314, 3, 2,
	2, 2, 314, 100, 3, 2, 2, 2, 315, 313, 3, 2, 2, 2, 316, 318, 5, 129, 65,
	2, 317, 316, 3, 2, 2, 2, 318, 319, 3, 2, 2, 2, 319, 317, 3, 2, 2, 2, 319,
	320, 3, 2, 2, 2, 320, 102, 3, 2, 2, 2, 321, 324, 5, 131, 66, 2, 322, 324,
	5, 133, 67, 2, 323, 321, 3, 2, 2, 2, 323, 322, 3, 2, 2, 2, 324, 104, 3,
	2, 2, 2, 325, 334, 7, 36, 2, 2, 326, 333, 10, 19, 2, 2, 327, 330, 7, 94,
	2, 2, 328, 331, 11, 2, 2, 2, 329, 331, 7, 2, 2, 3, 330, 328, 3, 2, 2, 2,
	330, 329, 3, 2, 2, 2, 331, 333, 3, 2, 2, 2, 332, 326, 3, 2, 2, 2, 332,
	327, 3, 2, 2, 2, 333, 336, 3, 2, 2, 2, 334, 332, 3, 2, 2, 2, 334, 335,
	3, 2, 2, 2, 335, 337, 3, 2, 2, 2, 336, 334, 3, 2, 2, 2, 337, 338, 7, 36,
	2, 2, 338, 106, 3, 2, 2, 2, 339, 341, 9, 20, 2, 2, 340, 339, 3, 2, 2, 2,
	341, 342, 3, 2, 2, 2, 342, 340, 3, 2, 2, 2, 342, 343, 3, 2, 2, 2, 343,
	344, 3, 2, 2, 2, 344, 345, 8, 54, 2, 2, 345, 108, 3, 2, 2, 2, 346, 347,
	7, 49, 2, 2, 347, 348, 7, 49, 2, 2, 348, 349, 7, 49, 2, 2, 349, 350, 7,
	49, 2, 2, 350, 354, 3, 2, 2, 2, 351, 353, 10, 21, 2, 2, 352, 351, 3, 2,
	2, 2, 353, 356, 3, 2, 2, 2, 354, 352, 3, 2, 2, 2, 354, 355, 3, 2, 2, 2,
	355, 357, 3, 2, 2, 2, 356, 354, 3, 2, 2, 2, 357, 358, 8, 55, 2, 2, 358,
	110, 3, 2, 2, 2, 359, 361, 5, 137, 69, 2, 360, 362, 10, 21, 2, 2, 361,
	360, 3, 2, 2, 2, 362, 363, 3, 2, 2, 2, 363, 361, 3, 2, 2, 2, 363, 364,
	3, 2, 2, 2, 364, 112, 3, 2, 2, 2, 365, 366, 9, 21, 2, 2, 366, 367, 3, 2,
	2, 2, 367, 368, 8, 57, 2, 2, 368, 114, 3, 2, 2, 2, 369, 370, 7, 49, 2,
	2, 370, 371, 7, 44, 2, 2, 371, 375, 3, 2, 2, 2, 372, 374, 11, 2, 2, 2,
	373, 372, 3, 2, 2, 2, 374, 377, 3, 2, 2, 2, 375, 376, 3, 2, 2, 2, 375,
	373, 3, 2, 2, 2, 376, 378, 3, 2, 2, 2, 377, 375, 3, 2, 2, 2, 378, 379,
	7, 44, 2, 2, 379, 380, 7, 49, 2, 2, 380, 381, 3, 2, 2, 2, 381, 382, 8,
	58, 2, 2, 382, 116, 3, 2, 2, 2, 383, 384, 7, 49, 2, 2, 384, 385, 7, 49,
	2, 2, 385, 389, 3, 2, 2, 2, 386, 388, 10, 21, 2, 2, 387, 386, 3, 2, 2,
	2, 388, 391, 3, 2, 2, 2, 389, 387, 3, 2, 2, 2, 389, 390, 3, 2, 2, 2, 390,
	392, 3, 2, 2, 2, 391, 389, 3, 2, 2, 2, 392, 393, 8, 59, 3, 2, 393, 118,
	3, 2, 2, 2, 394, 397, 5, 127, 64, 2, 395, 397, 9, 22, 2, 2, 396, 394, 3,
	2, 2, 2, 396, 395, 3, 2, 2, 2, 397, 120, 3, 2, 2, 2, 398, 400, 5, 129,
	65, 2, 399, 398, 3, 2, 2, 2, 400, 401, 3, 2, 2, 2, 401, 399, 3, 2, 2, 2,
	401, 402, 3, 2, 2, 2, 402, 403, 3, 2, 2, 2, 403, 404, 5, 119, 60, 2, 404,
	122, 3, 2, 2, 2, 405, 409, 5, 119, 60, 2, 406, 409, 5, 125, 63, 2, 407,
	409, 5, 129, 65, 2, 408, 405, 3, 2, 2, 2, 408, 406, 3, 2, 2, 2, 408, 407,
	3, 2, 2, 2, 409, 124, 3, 2, 2, 2, 410, 411, 9, 23, 2, 2, 411, 126, 3, 2,
	2, 2, 412, 413, 9, 24, 2, 2, 413, 128, 3, 2, 2, 2, 414, 415, 9, 25, 2,
	2, 415, 130, 3, 2, 2, 2, 416, 418, 5, 129, 65, 2, 417, 416, 3, 2, 2, 2,
	418, 421, 3, 2, 2, 2, 419, 417, 3, 2, 2, 2, 419, 420, 3, 2, 2, 2, 420,
	422, 3, 2, 2, 2, 421, 419, 3, 2, 2, 2, 422, 424, 7, 48, 2, 2, 423, 425,
	5, 129, 65, 2, 424, 423, 3, 2, 2, 2, 425, 426, 3, 2, 2, 2, 426, 424, 3,
	2, 2, 2, 426, 427, 3, 2, 2, 2, 427, 436, 3, 2, 2, 2, 428, 430, 5, 129,
	65, 2, 429, 428, 3, 2, 2, 2, 430, 431, 3, 2, 2, 2, 431, 429, 3, 2, 2, 2,
	431, 432, 3, 2, 2, 2, 432, 433, 3, 2, 2, 2, 433, 434, 7, 48, 2, 2, 434,
	436, 3, 2, 2, 2, 435, 419, 3, 2, 2, 2, 435, 429, 3, 2, 2, 2, 436, 132,
	3, 2, 2, 2, 437, 439, 5, 129, 65, 2, 438, 437, 3, 2, 2, 2, 439, 440, 3,
	2, 2, 2, 440, 438, 3, 2, 2, 2, 440, 441, 3, 2, 2, 2, 441, 444, 3, 2, 2,
	2, 442, 444, 5, 131, 66, 2, 443, 438, 3, 2, 2, 2, 443, 442, 3, 2, 2, 2,
	444, 445, 3, 2, 2, 2, 445, 446, 5, 135, 68, 2, 446, 134, 3, 2, 2, 2, 447,
	449, 9, 12, 2, 2, 448, 450, 9, 26, 2, 2, 449, 448, 3, 2, 2, 2, 449, 450,
	3, 2, 2, 2, 450, 452, 3, 2, 2, 2, 451, 453, 5, 129, 65, 2, 452, 451, 3,
	2, 2, 2, 453, 454, 3, 2, 2, 2, 454, 452, 3, 2, 2, 2, 454, 455, 3, 2, 2,
	2, 455, 136, 3, 2, 2, 2, 456, 457, 7, 49, 2, 2, 457, 458, 7, 49, 2, 2,
	458, 459, 7, 49, 2, 2, 459, 138, 3, 2, 2, 2, 26, 2, 308, 313, 319, 323,
	330, 332, 334, 342, 354, 363, 375, 389, 396, 401, 408, 419, 426, 431, 435,
	440, 443, 449, 454, 4, 8, 2, 2, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "','", "'{'", "'}'", "'('", "')'", "'['", "']'", "'='", "'.'",
	"'+='", "'-='", "'*='", "'/='", "'+'", "'-'", "'<<'", "'>>'", "'<'", "'>'",
	"'<='", "'>='", "'=='", "'!='", "'!'", "'~'", "'*'", "'/'", "'%'", "'&'",
	"'|'", "'&&'", "'||'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Const",
	"Var", "If", "Int", "Else", "Func", "StringKeyword", "Class", "Void", "Return",
	"Float", "Prototype", "Instance", "Null", "NoFunc", "Identifier", "IntegerLiteral",
	"FloatLiteral", "StringLiteral", "Whitespace", "TooManyCommentlines", "SummaryComment",
	"Newline", "BlockComment", "LineComment",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
	"Const", "Var", "If", "Int", "Else", "Func", "StringKeyword", "Class",
	"Void", "Return", "Float", "Prototype", "Instance", "Null", "NoFunc", "Identifier",
	"IntegerLiteral", "FloatLiteral", "StringLiteral", "Whitespace", "TooManyCommentlines",
	"SummaryComment", "Newline", "BlockComment", "LineComment", "IdStart",
	"IdStartNumeric", "IdContinue", "IdSpecial", "GermanCharacter", "Digit",
	"PointFloat", "ExponentFloat", "Exponent", "DocCommentStart",
}

type DaedalusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewDaedalusLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *DaedalusLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewDaedalusLexer(input antlr.CharStream) *DaedalusLexer {
	l := new(DaedalusLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Daedalus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DaedalusLexer tokens.
const (
	DaedalusLexerT__0                = 1
	DaedalusLexerT__1                = 2
	DaedalusLexerT__2                = 3
	DaedalusLexerT__3                = 4
	DaedalusLexerT__4                = 5
	DaedalusLexerT__5                = 6
	DaedalusLexerT__6                = 7
	DaedalusLexerT__7                = 8
	DaedalusLexerT__8                = 9
	DaedalusLexerT__9                = 10
	DaedalusLexerT__10               = 11
	DaedalusLexerT__11               = 12
	DaedalusLexerT__12               = 13
	DaedalusLexerT__13               = 14
	DaedalusLexerT__14               = 15
	DaedalusLexerT__15               = 16
	DaedalusLexerT__16               = 17
	DaedalusLexerT__17               = 18
	DaedalusLexerT__18               = 19
	DaedalusLexerT__19               = 20
	DaedalusLexerT__20               = 21
	DaedalusLexerT__21               = 22
	DaedalusLexerT__22               = 23
	DaedalusLexerT__23               = 24
	DaedalusLexerT__24               = 25
	DaedalusLexerT__25               = 26
	DaedalusLexerT__26               = 27
	DaedalusLexerT__27               = 28
	DaedalusLexerT__28               = 29
	DaedalusLexerT__29               = 30
	DaedalusLexerT__30               = 31
	DaedalusLexerT__31               = 32
	DaedalusLexerT__32               = 33
	DaedalusLexerConst               = 34
	DaedalusLexerVar                 = 35
	DaedalusLexerIf                  = 36
	DaedalusLexerInt                 = 37
	DaedalusLexerElse                = 38
	DaedalusLexerFunc                = 39
	DaedalusLexerStringKeyword       = 40
	DaedalusLexerClass               = 41
	DaedalusLexerVoid                = 42
	DaedalusLexerReturn              = 43
	DaedalusLexerFloat               = 44
	DaedalusLexerPrototype           = 45
	DaedalusLexerInstance            = 46
	DaedalusLexerNull                = 47
	DaedalusLexerNoFunc              = 48
	DaedalusLexerIdentifier          = 49
	DaedalusLexerIntegerLiteral      = 50
	DaedalusLexerFloatLiteral        = 51
	DaedalusLexerStringLiteral       = 52
	DaedalusLexerWhitespace          = 53
	DaedalusLexerTooManyCommentlines = 54
	DaedalusLexerSummaryComment      = 55
	DaedalusLexerNewline             = 56
	DaedalusLexerBlockComment        = 57
	DaedalusLexerLineComment         = 58
)
